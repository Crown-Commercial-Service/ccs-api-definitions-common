openapi: 3.0.0

info:
  title: Vanilla OCDS 
  description: OCDS Vanilla definitions excluding Extentions and Versioned Release which is a copy of the objects with versioning added per fields
  version: 0.0.2
servers:
  - url: http://api.example.com/v1
    description: Optional server description, e.g. Main (production) server
  - url: http://staging-api.example.com
    description: Optional server description, e.g. Internal staging server for testing

paths:

#id: 'https://standard.open-contracting.org/schema/1__1__5/record-package-schema.json'
#$schema: 'http://json-schema.org/draft-04/schema#'

  /ocds/RecordPackage:
    get:
      summary: "Returns the requested release with supplied OCID"
      operationId: OCDS.RecordPackage   
      parameters:
      - in: query
        name: "OCID"
        schema:
          type: string
        example: "dd/mm/yy:hh:mm:ss"
        required: true
        description: "OCID of the required release"
      responses:
        '200':
          description: "Returns a release schema"
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RecordPackage'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '404':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/404NotFound'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'


# id: 'https://standard.open-contracting.org/schema/1__1__5/release-package-schema.json'
# $schema: 'http://json-schema.org/draft-04/schema#'

  /ocds/ReleasePackage:
    get:
      summary: "Returns a package of releases"
      operationId: OCDS.ReleasePackage   
      responses:
        '200':
          description: "Returns a release schema"
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ReleasePackage'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '404':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/404NotFound'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'  
 
# id: 'https://standard.open-contracting.org/schema/1__1__5/release-schema.json'
# $schema: 'http://json-schema.org/draft-04/schema#'
         
  /ocds/Record:
    get:
      summary: "Returns the requested record with supplied OCID"
      operationId: OCDS.Record
      parameters:
      - in: query
        name: "OCID"
        schema:
          type: string
        example: "dd/mm/yy:hh:mm:ss"
        required: true
        description: "OCID of the required release"
      responses:
        '200':
          description: "Returns a release schema"
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Record'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '404':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/404NotFound'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'   

# id: 'https://standard.open-contracting.org/schema/1__1__5/release-schema.json'
# $schema: 'http://json-schema.org/draft-04/schema#'
         
  /ocds/Release:
    get:
      summary: "Returns the requested release with supplied OCID"
      operationId: OCDS.Release   
      parameters:
      - in: query
        name: "OCID"
        schema:
          type: string
        example: "dd/mm/yy:hh:mm:ss"
        required: true
        description: "OCID of the required release"
      responses:
        '200':
          description: "Returns a release schema"
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Release'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '404':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/404NotFound'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'   



components:
  schemas:
    RecordPackage:
      title: Schema for an Open Contracting Record package
      description: The record package contains a list of records along with some publishing metadata. The records pull together all the releases under a single Open Contracting ID and compile them into the latest version of the information along with the history of any data changes.
      type: object
      properties:
        uri:
          title: Package identifier
          description: The URI of this package that identifies it uniquely in the world.
          type: string
          format: uri
        version:
          title: OCDS schema version
          description: 'The version of the OCDS schema used in this package, expressed as major.minor For example: 1.0 or 1.1'
          type: string
          pattern: ^(\d+\.)(\d+)$
        extensions:
          title: OCDS extensions
          description: 'An array of OCDS extensions used in this package, in which each array item is the URL of an extension.json file.'
          type: array
          items:
            type: string
            format: uri
        publisher:
          title: Publisher
          description: Information to uniquely identify the publisher of this package.
          type: object
          properties:
            name:
              title: Name
              description: The name of the organization or department responsible for publishing this data.
              type: string
            scheme:
              title: Scheme
              description: The scheme that holds the unique identifiers used to identify the item being identified.
              nullable: true
              type: string
            uid:
              title: uid
              description: The unique ID for this entity under the given ID scheme.
              nullable: true
              type: string
            uri:
              title: URI
              description: A URI to identify the publisher.
              nullable: true
              type: string
              format: uri
          required:
            - name
        license:
          title: License
          description: 'A link to the license that applies to the data in this package. A Public Domain Dedication or [Open Definition Conformant](http://opendefinition.org/licenses/) license is recommended. The canonical URI of the license should be used. Documents linked from this file may be under other license conditions.'
          nullable: true
          type: string
          format: uri
        publicationPolicy:
          title: Publication policy
          description: A link to a document describing the publishers publication policy.
          nullable: true
          type: string
          format: uri
        publishedDate:
          title: Published date
          description: 'The date that this package was published. If this package is generated ''on demand'', this date should reflect the date of the last change to the underlying contents of the package.'
          type: string
          format: date-time
        packages:
          title: Packages
          description: A list of URIs of all the release packages that were used to create this record package.
          type: array
          minItems: 1
          items:
            type: string
            format: uri
          uniqueItems: true
        records:
          title: Records
          description: The records for this data package.
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/Record'
          uniqueItems: true
      required:
        - uri
        - publisher
        - publishedDate
        - records
        - version
        
  
    ReleasePackage:
      title: Schema for an Open Contracting Release Package
      description: The release package contains a list of releases along with some publishing metadata.
      type: object
      required:
        - uri
        - publisher
        - publishedDate
        - releases
        - version
      properties:
        uri:
          title: Package identifier
          description: 'The URI of this package that identifies it uniquely in the world. Recommended practice is to use a dereferenceable URI, where a persistent copy of this package is available.'
          type: string
          format: uri
        version:
          title: OCDS schema version
          description: 'The version of the OCDS schema used in this package, expressed as major.minor For example: 1.0 or 1.1'
          type: string
          pattern: ^(\d+\.)(\d+)$
        extensions:
          title: OCDS extensions
          description: 'An array of OCDS extensions used in this package, in which each array item is the URL of an extension.json file.'
          type: array
          items:
            type: string
            format: uri
        publishedDate:
          title: Published date
          description: 'The date that this package was published. If this package is generated ''on demand'', this date should reflect the date of the last change to the underlying contents of the package.'
          type: string
          format: date-time
        releases:
          title: Releases
          description: An array of one or more OCDS releases.
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/Release'
          uniqueItems: true
        publisher:
          required:
            - name
          title: Publisher
          description: Information to uniquely identify the publisher of this package.
          type: object
          properties:
            name:
              title: Name
              description: The name of the organization or department responsible for publishing this data.
              type: string
            scheme:
              title: Scheme
              description: The scheme that holds the unique identifiers used to identify the item being identified.
              nullable: true
              type: string
            uid:
              title: uid
              description: The unique ID for this entity under the given ID scheme.
              nullable: true
              type: string
            uri:
              title: URI
              description: A URI to identify the publisher.
              nullable: true
              type: string
              format: uri
        license:
          title: License
          description: 'A link to the license that applies to the data in this package. A Public Domain Dedication or [Open Definition Conformant](http://opendefinition.org/licenses/) license is recommended. The canonical URI of the license should be used. Documents linked from this file may be under other license conditions.'
          nullable: true
          type: string
          format: uri
        publicationPolicy:
          title: Publication policy
          description: 'A link to a document describing the publishers [publication policy](https://standard.open-contracting.org/1.1/en/implementation/publication_policy/).'
          nullable: true
          type: string
          format: uri
          
    Record:
      title: Record
      description: An OCDS record must provide a list of all the existing OCDS releases relating to a single contracting process and should provide a compiled release containing the current state of all fields in the release schema. An OCDS record may also provide a versioned history of all changes to the data in the compiled release.
      type: object
      required:
        - ocid
        - releases
      properties:
        ocid:
          title: Open Contracting ID
          description: 'A unique identifier that identifies the unique Open Contracting Process. For more information see: https://standard.open-contracting.org/1.1/en/getting_started/contracting_process/'
          type: string
        releases:
          title: Releases
          description: An array of linking identifiers or releases
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/LinkedRelease'
              - $ref: '#/components/schemas/EmbeddedRelease'
          minItems: 1
        compiledRelease:
          title: Compiled release
          description: 'This is the latest version of all the contracting data, it has the same schema as an open contracting release.'
          allOf:
            - $ref: '#/components/schemas/Release'
        versionedRelease:
          title: Versioned release
          description: This contains the history of all the data in the compiled release.
          allOf:
            - $ref: '#/components/schemas/VersionedRelease'
            
            
    #LinkedReleases:
    #  title: Linked releases
    #  description: 'A list of objects that identify the releases associated with this Open Contracting ID. The releases MUST be sorted into date order in the array, from oldest (at position 0) to newest (last).'
    #  type: array
    #  items:
    #    allOf:
    #      - $ref: '#/components/schemas/LinkedRelease'
      #description: Information to uniquely identify the release.
      
    LinkedRelease:
      title: Linked release
      type: object
      required:
        - url
        - date
      properties:
        url:
          title: Release URL
          description: 'The URL of the release which contains the URL of the package with the release `id` appended using a fragment identifier e.g. https://standard.open-contracting.org/1.1/en/examples/tender.json#ocds-213czf-000-00001'
          nullable: true
          type: string
          format: uri
        date:
          title: Release Date
          description: The date of the release. It should match the value of the `date` field of the release. This is used to sort the releases in the list in chronological order.
          type: string
          format: date-time
        tag:
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_CodeLists.yaml#/components/schemas/ReleaseTag'
                    
    EmbeddedRelease:
      title: Embedded release
      description: 'A list of releases, with all the data. The releases MUST be sorted into date order in the array, from oldest (at position 0) to newest (last).'
    #  type: array
    #  items:
      allOf:
        - $ref: '#/components/schemas/Release'
    #  minItems: 1
            
    VersionedRelease:
      title: OCDS Versioned Release
      description: >-
        'This contains the history of all the data in the compiled release.'
      type: object
      required:
        - initiationType
        - date
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_VersionedRelease.yaml#/components/schemas/VersionedRelease'
      #minItems: 1
          
  
    Release:
      title: Schema for an Open Contracting Release
      description: 'Each release provides data about a single contracting process at a particular point in time. Releases can be used to notify users of new tenders, awards, contracts and other updates. Releases may repeat or update information provided previously in this contracting process. One contracting process may have many releases. A ''record'' of a contracting process follows the same structure as a release, but combines information from multiple points in time into a single summary.'
      type: object
      required:
        - ocid
        - id
        - date
        - tag
        - initiationType
      properties:
        ocid:
          title: Open Contracting ID
          description: 'A globally unique identifier for this Open Contracting Process. Composed of an ocid prefix and an identifier for the contracting process. For more information see the [Open Contracting Identifier guidance](https://standard.open-contracting.org/latest/en/schema/identifiers/)'
          type: string
          minLength: 1
        id:
          title: Release ID
          description: 'An identifier for this particular release of information. A release identifier must be unique within the scope of its related contracting process (defined by a common ocid). A release identifier must not contain the # character.'
          type: string
          minLength: 1
          #omitWhenMerged: true
        date:
          title: Release Date
          description: 'The date on which the information contained in the release was first recorded in, or published by, any system.'
          type: string
          format: date-time
          #omitWhenMerged: true
        tag:
          allOf:
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_CodeLists.yaml#/components/schemas/ReleaseTag'
        initiationType:
          allOf:
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_CodeLists.yaml#/components/schemas/InitiationType'
        parties:
          title: Parties
          description: 'Information on the parties (organizations, economic operators and other participants) who are involved in the contracting process and their roles, e.g. buyer, procuring entity, supplier etc. Organization references elsewhere in the schema are used to refer back to this entries in this list.'
          type: array
          items:
            $ref: '#/components/schemas/Organization'
          uniqueItems: true
        buyer:
          title: Buyer
          description: 'A buyer is an entity whose budget will be used to pay for goods, works or services related to a contract. This may be different from the procuring entity who may be specified in the tender data.'
          allOf:
            - $ref: '#/components/schemas/OrganizationReference'
        planning:
          title: Planning
          description: 'Information from the planning phase of the contracting process. This includes information related to the process of deciding what to contract, when and how.'
          allOf:
            - $ref: '#/components/schemas/Planning'
        tender:
          title: Tender
          description: The activities undertaken in order to enter into a contract.
          allOf:
            - $ref: '#/components/schemas/Tender'
        awards:
          title: Awards
          description: 'Information from the award phase of the contracting process. There can be more than one award per contracting process e.g. because the contract is split among different providers, or because it is a standing offer.'
          type: array
          items:
            $ref: '#/components/schemas/Award'
          uniqueItems: true
        contracts:
          title: Contracts
          description: Information from the contract creation phase of the procurement process.
          type: array
          items:
            $ref: '#/components/schemas/Contract'
          uniqueItems: true
        language:
          title: Release language
          description: 'The default language of the data using either two-letter [ISO639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes), or extended [BCP47 language tags](http://www.w3.org/International/articles/language-tags/). The use of lowercase two-letter codes from [ISO639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) is recommended.'
          nullable: true
          type: string
          default: en
        relatedProcesses:
          title: Related processes
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/RelatedProcess'
          description: 'The details of related processes: for example, if this process follows on from one or more other processes, represented under a separate open contracting identifier (ocid). This is commonly used to relate mini-competitions to their parent frameworks or individual tenders to a broader planning process.'
          
          

    Planning:
      title: Planning
      description: >-
        Information from the planning phase of the contracting process. Note that
        many other fields can be filled in a planning release, in the appropriate
        fields in other schema sections; these would likely be estimates at this
        stage, e.g. value in tender.
      type: object
      properties:
        rationale:
          title: Rationale
          description: >-
            The rationale for the procurement provided in free text. More detail
            can be provided in an attached document.
          type: string
          nullable: true
          pattern: >-
            '^(rationale_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
        budget:
          title: Budget
          description: Details of the budget that funds this contracting process.
          allOf:
            - $ref: '#/components/schemas/Budget'
        documents:
          title: Documents
          description: A list of documents related to the planning process.
          type: array
          items:
            $ref: '#/components/schemas/Document'
        milestones:
          title: Planning milestones
          description: A list of milestones associated with the planning stage.
          type: array
          items:
            $ref: '#/components/schemas/Milestone'
        # patternProperties:
        #  '^(rationale_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
         #   type: string
         #   default: null
      
    Tender:
      title: Tender
      description: Data regarding tender process - publicly inviting prospective contractors to submit bids for evaluation and selecting a winner or winners.
      type: object
      required:
        - id
      properties:
        id:
          title: Tender ID
          description: 'An identifier for this tender process. This may be the same as the ocid, or may be an internal identifier for this tender.'
          oneOf:
            - type: string
            - type: integer
          minLength: 1
          #versionID: true
        title:
          title: Tender title
          description: >-
            A title for this tender. This will often be used by applications as a
            headline to attract interest, and to help analysts understand the
            nature of this procurement.
          type: string
          nullable: true
        description:
          title: Tender description
          description: A summary description of the tender. This complements any structured information provided using the items array. Descriptions should be short and easy to read. Avoid using ALL CAPS.
          type: string
          nullable: true
        status:
          allOf: 
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_CodeLists.yaml#/components/schemas/TenderStatus'
        procuringEntity:
          title: Procuring entity
          description: 'The entity managing the procurement. This may be different from the buyer who pays for, or uses, the items being procured.'
          allOf:
            - $ref: '#/components/schemas/OrganizationReference'
        items:
          title: Items to be procured
          description: 'The goods and services to be purchased, broken into line items wherever possible. Items should not be duplicated, but the quantity specified instead.'
          type: array
          items:
            $ref: '#/components/schemas/Item'
          uniqueItems: true
        value:
          title: Value
          description: The total upper estimated value of the procurement. A negative value indicates that the contracting process may involve payments from the supplier to the buyer (commonly used in concession contracts).
          allOf:
            - $ref: '#/components/schemas/Value'
        minValue:
          title: Minimum value
          description: The minimum estimated value of the procurement.  A negative value indicates that the contracting process may involve payments from the supplier to the buyer (commonly used in concession contracts).
          allOf:
            - $ref: '#/components/schemas/Value'
        procurementMethod:
          allOf: 
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_CodeLists.yaml#/components/schemas/ProcurementCategory'
        procurementMethodDetails:
          title: Procurement method details
          description: Additional detail on the procurement method used. This field can be used to provide the local name of the particular procurement method used.
          type: string
          nullable: true
        procurementMethodRationale:
          title: Procurement method rationale
          description: Rationale for the chosen procurement method. This is especially important to provide a justification in the case of limited tenders or direct awards.
          type: string
          nullable: true
        mainProcurementCategory:
          allOf: 
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_CodeLists.yaml#/components/schemas/ProcurementCategory'
        additionalProcurementCategories:
          allOf: 
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_CodeLists.yaml#/components/schemas/AdditionalProcurementCategories'
        awardCriteria:
          allOf: 
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_CodeLists.yaml#/components/schemas/AwardCriteria'
        awardCriteriaDetails:
          title: Award criteria details
          description: Any detailed or further information on the award or selection criteria.
          type: string
          nullable: true
        submissionMethod:
          type: array
          items:
            allOf: 
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_CodeLists.yaml#/components/schemas/SubmissionMethod'
        submissionMethodDetails:
          title: Submission method details
          description: 'Any detailed or further information on the submission method. This can include the address, e-mail address or online service to which bids are submitted, and any special requirements to be followed for submissions.'
          type: string
          nullable: true
        tenderPeriod:
          title: Tender period
          description: The period when the tender is open for submissions. The end date is the closing date for tender submissions.
          allOf:
            - $ref: '#/components/schemas/Period'
        enquiryPeriod:
          title: Enquiry period
          description: 'The period during which potential bidders may submit questions and requests for clarification to the entity managing procurement. Details of how to submit enquiries should be provided in attached notices, or in submissionMethodDetails. Structured dates for when responses to questions will be made can be provided using tender milestones.'
          allOf:
            - $ref: '#/components/schemas/Period'
        hasEnquiries:
          title: Has enquiries?
          description: 'A true/false field to indicate whether any enquiries were received during the tender process. Structured information on enquiries that were received, and responses to them, can be provided using the enquiries extension.'
          type: boolean
          nullable: true
        eligibilityCriteria:
          title: Eligibility criteria
          description: A description of any eligibility criteria for potential suppliers.
          type: string
          nullable: true
        awardPeriod:
          title: Evaluation and award period
          description: The period for decision making regarding the contract award. The end date should be the date on which an award decision is due to be finalized. The start date may be used to indicate the start of an evaluation period.
          allOf:
            - $ref: '#/components/schemas/Period'
        contractPeriod:
          description: 'The period over which the contract is estimated or required to be active. If the tender does not specify explicit dates, the duration field may be used.'
          title: Contract period
          allOf:
            - $ref: '#/components/schemas/Period'
        numberOfTenderers:
          title: Number of tenderers
          description: The number of parties who submit a bid.
          type: integer
          nullable: true
        tenderers:
          title: Tenderers
          description: All parties who submit a bid on a tender. More detailed information on bids and the bidding organization can be provided using the bid extension.
          type: array
          items:
            $ref: '#/components/schemas/OrganizationReference'
          #uniqueItems: true
        documents:
          title: Documents
          description: 'All documents and attachments related to the tender, including any notices. See the [documentType](https://standard.open-contracting.org/latest/en/schema/codelists/#document-type) codelist for details of potential documents to include. Common documents include official legal notices of tender, technical specifications, evaluation criteria, and, as a tender process progresses, clarifications and replies to queries.'
          type: array
          items:
            $ref: '#/components/schemas/Document'
        milestones:
          title: Milestones
          description: A list of milestones associated with the tender.
          type: array
          items:
            $ref: '#/components/schemas/Milestone'
        amendments:
          description: 'A tender amendment is a formal change to the tender, and generally involves the publication of a new tender notice/release. The rationale and a description of the changes made can be provided here.'
          type: array
          title: Amendments
          items:
            $ref: '#/components/schemas/Amendment'
        amendment:
          title: Amendment
          description: The use of individual amendment objects has been deprecated. From OCDS 1.1 information should be provided in the amendments array.
          allOf:
            - $ref: '#/components/schemas/Amendment'
          deprecated: true
            #description: The single amendment object has been deprecated in favour of including amendments in an amendments (plural) array.
            #deprecatedVersion: '1.1'
      #patternProperties:
      #  '^(title_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
      #    type: string
      #      nullable: true
      #  '^(description_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
      #    type: string
      #      nullable: true
      #  '^(procurementMethodRationale_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
      #    type: string
      #      nullable: true
      #  '^(awardCriteriaDetails_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
      #    type: string
      #      nullable: true
      #  '^(submissionMethodDetails_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
      #    type: string
      #      nullable: true
      #  '^(eligibilityCriteria_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
      #    type: string
      #      nullable: true
    Award:
      title: Award
      description: 'An award for the given procurement. There can be more than one award per contracting process e.g. because the contract is split among different providers, or because it is a standing offer.'
      type: object
      required:
        - id
      properties:
        id:
          title: Award ID
          description: 'The identifier for this award. It must be unique and must not change within the Open Contracting Process it is part of (defined by a single ocid). See the [identifier guidance](https://standard.open-contracting.org/latest/en/schema/identifiers/) for further details.'
          oneOf:
            - type: string
            - type: integer
          minLength: 1
        title:
          title: Title
          description: Award title
          type: string
          nullable: true
        description:
          title: Description
          description: Award description
          type: string
          nullable: true
        status:
          allOf: 
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_CodeLists.yaml#/components/schemas/AwardCriteria'
        date:
          title: Award date
          description: The date of the contract award. This is usually the date on which a decision to award was made.
          type: string
          nullable: true
          format: date-time
        value:
          title: Value
          description: 'The total value of this award. In the case of a framework contract this may be the total estimated lifetime value, or maximum value, of the agreement. There may be more than one award per procurement. A negative value indicates that the award may involve payments from the supplier to the buyer (commonly used in concession contracts).'
          allOf:
            - $ref: '#/components/schemas/Value'
        suppliers:
          title: Suppliers
          description: 'The suppliers awarded this award. If different suppliers have been awarded different items or values, these should be split into separate award blocks.'
          type: array
          items:
            $ref: '#/components/schemas/OrganizationReference'
          uniqueItems: true
        items:
          title: Items awarded
          description: 'The goods and services awarded in this award, broken into line items wherever possible. Items should not be duplicated, but the quantity specified instead.'
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/Item'
          uniqueItems: true
        contractPeriod:
          title: Contract period
          description: The period for which the contract has been awarded.
          allOf:
            - $ref: '#/components/schemas/Period'
        documents:
          title: Documents
          description: 'All documents and attachments related to the award, including any notices.'
          type: array
          items:
            $ref: '#/components/schemas/Document'
          uniqueItems: true
        amendments:
          description: 'An award amendment is a formal change to the details of the award, and generally involves the publication of a new award notice/release. The rationale and a description of the changes made can be provided here.'
          type: array
          title: Amendments
          items:
            $ref: '#/components/schemas/Amendment'
        amendment:
          title: Amendment
          description: The use of individual amendment objects has been deprecated. From OCDS 1.1 information should be provided in the amendments array.
          allOf:
            - $ref: '#/components/schemas/Amendment'
          deprecated: true
            #description: The single amendment object has been deprecated in favour of including amendments in an amendments (plural) array.
            #deprecatedVersion: '1.1'
      #patternProperties:
      #  '^(title_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
      #    type: string
      #      nullable: true
      #  '^(description_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
      #    type: string
      #      nullable: true
    Contract:
      type: object
      title: Contract
      description: Information regarding the signed contract between the buyer and supplier(s).
      required:
        - id
        - awardID
      properties:
        id:
          title: Contract ID
          description: 'The identifier for this contract. It must be unique and must not change within the Open Contracting Process it is part of (defined by a single ocid). See the [identifier guidance](https://standard.open-contracting.org/latest/en/schema/identifiers/) for further details.'
          oneOf:
            - type: string
            - type: integer
          minLength: 1
        awardID:
          title: Award ID
          description: The award.id against which this contract is being issued.
          oneOf:
            - type: string
            - type: integer
          minLength: 1
        title:
          title: Contract title
          description: Contract title
          type: string
          nullable: true
        description:
          title: Contract description
          description: Contract description
          type: string
          nullable: true
        status:
          allOf: 
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_CodeLists.yaml#/components/schemas/ContractStatus'
        period:
          title: Period
          description: The start and end date for the contract.
          allOf:
            - $ref: '#/components/schemas/Period'
        value:
          title: Value
          description: The total value of this contract. A negative value indicates that the contract will involve payments from the supplier to the buyer (commonly used in concession contracts).
          allOf:
            - $ref: '#/components/schemas/Value'
        items:
          title: Items contracted
          description: 'The goods, services, and any intangible outcomes in this contract. Note: If the items are the same as the award do not repeat.'
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/Item'
          uniqueItems: true
        dateSigned:
          title: Date signed
          description: 'The date the contract was signed. In the case of multiple signatures, the date of the last signature.'
          type: string
          nullable: true
          format: date-time
        documents:
          title: Documents
          description: 'All documents and attachments related to the contract, including any notices.'
          type: array
          items:
            $ref: '#/components/schemas/Document'
          uniqueItems: true
        implementation:
          title: Implementation
          description: Information related to the implementation of the contract in accordance with the obligations laid out therein.
          allOf:
            - $ref: '#/components/schemas/Implementation'
        relatedProcesses:
          uniqueItems: true
          items:
            $ref: '#/components/schemas/RelatedProcess'
          description: 'The details of related processes: for example, if this process is followed by one or more contracting processes, represented under a separate open contracting identifier (ocid). This is commonly used to refer to subcontracts and to renewal or replacement processes for this contract.'
          title: Related processes
          type: array
        milestones:
          title: Contract milestones
          description: A list of milestones associated with the finalization of this contract.
          type: array
          items:
            $ref: '#/components/schemas/Milestone'
        amendments:
          description: 'A contract amendment is a formal change to, or extension of, a contract, and generally involves the publication of a new contract notice/release, or some other documents detailing the change. The rationale and a description of the changes made can be provided here.'
          type: array
          title: Amendments
          items:
            $ref: '#/components/schemas/Amendment'
        amendment:
          title: Amendment
          description: The use of individual amendment objects has been deprecated. From OCDS 1.1 information should be provided in the amendments array.
          allOf:
            - $ref: '#/components/schemas/Amendment'
          deprecated: true
            #description: The single amendment object has been deprecated in favour of including amendments in an amendments (plural) array.
            #deprecatedVersion: '1.1'
      #patternProperties:
      #  '^(title_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
      #    type: string
      #      nullable: true
      #  '^(description_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
      #    type: string
      #      nullable: true
      
      
    Implementation:
      type: object
      title: Implementation
      description: Information during the performance / implementation stage of the contract.
      properties:
        transactions:
          title: Transactions
          description: A list of the spending transactions made against this contract
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
          uniqueItems: true
        milestones:
          title: Milestones
          description: 'As milestones are completed, the milestone''s status and dates should be updated.'
          type: array
          items:
            $ref: '#/components/schemas/Milestone'
          uniqueItems: true
        documents:
          title: Documents
          description: Documents and reports that are part of the implementation phase e.g. audit and evaluation reports.
          type: array
          items:
            $ref: '#/components/schemas/Document'
          uniqueItems: true
          
          
    Milestone:
      title: Milestone
      description: The milestone block can be used to represent a wide variety of events in the lifetime of a contracting process.
      type: object
      required:
        - id
      properties:
        id:
          title: ID
          description: 'A local identifier for this milestone, unique within this block. This field is used to keep track of multiple revisions of a milestone through the compilation from release to record mechanism.'
          oneOf:
            - type: string
            - type: integer
          minLength: 1
        title:
          title: Title
          description: Milestone title
          type: string
          nullable: true
        type:
          allOf: 
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_CodeLists.yaml#/components/schemas/MilestoneType'
        description:
          title: Description
          description: A description of the milestone.
          type: string
          nullable: true
        code:
          title: Milestone code
          description: 'Milestone codes can be used to track specific events that take place for a particular kind of contracting process. For example, a code of ''approvalLetter'' can be used to allow applications to understand this milestone represents the date an approvalLetter is due or signed.'
          type: string
          nullable: true
        dueDate:
          title: Due date
          description: The date the milestone is due.
          type: string
          nullable: true
          format: date-time
        dateMet:
          format: date-time
          title: Date met
          description: The date on which the milestone was met.
          type: string
          nullable: true
        dateModified:
          title: Date modified
          description: The date the milestone was last reviewed or modified and the status was altered or confirmed to still be correct.
          type: string
          nullable: true
          format: date-time
        status:
          allOf: 
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_CodeLists.yaml#/components/schemas/MilestoneStatus'
        documents:
          title: Documents
          description: List of documents associated with this milestone (Deprecated in 1.1).
          type: array
          deprecated: true
            #deprecatedVersion: '1.1'
            #description: 'Inclusion of documents at the milestone level is now deprecated. Documentation should be attached in the tender, award, contract or implementation sections, and titles and descriptions used to highlight the related milestone. Publishers who wish to continue to provide documents at the milestone level should explicitly declare this by using the milestone documents extension.'
          items:
            $ref: '#/components/schemas/Document'
          uniqueItems: true
      #patternProperties:
      #  '^(title_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
      #    type: string
      #      nullable: true
      #  '^(description_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
      #    type: string
      #      nullable: true
      
    Document:
      type: object
      title: Document
      description: 'Links to, or descriptions of, external documents can be attached at various locations within the standard. Documents can be supporting information, formal notices, downloadable forms, or any other kind of resource that ought to be made public as part of full open contracting.'
      required:
        - id
      properties:
        id:
          title: ID
          description: 'A local, unique identifier for this document. This field is used to keep track of multiple revisions of a document through the compilation from release to record mechanism.'
          oneOf:
            - type: string
            - type: integer
          minLength: 1
        documentType:
          allOf: 
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_CodeLists.yaml#/components/schemas/DocumentType'
        title:
          title: Title
          description: The document title.
          type: string
          nullable: true
        description:
          title: Description
          description: 'A short description of the document. Descriptions are recommended to not exceed 250 words. In the event the document is not accessible online, the description field can be used to describe arrangements for obtaining a copy of the document.'
          type: string
          nullable: true
        url:
          title: URL
          description: A direct link to the document or attachment. The server providing access to this document ought to be configured to correctly report the document mime type.
          type: string
          nullable: true
          format: uri
        datePublished:
          title: Date published
          description: The date on which the document was first published. This is particularly important for legally important documents such as notices of a tender.
          type: string
          nullable: true
          format: date-time
        dateModified:
          title: Date modified
          description: Date that the document was last modified
          type: string
          nullable: true
          format: date-time
        format:
          allOf: 
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_CodeLists.yaml#/components/schemas/FileFormat'
        language:
          allOf: 
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_CodeLists.yaml#/components/schemas/Language'
      #patternProperties:
      #  '^(title_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
      #    type: string
      #      nullable: true
      #  '^(description_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
      #    type: string
      #      nullable: true
      
    Budget:
      type: object
      title: Budget information
      description: 'This section contains information about the budget line, and associated projects, through which this contracting process is funded. It draws upon the data model of the [Fiscal Data Package](https://frictionlessdata.io/specs/fiscal-data-package/), and should be used to cross-reference to more detailed information held using a Budget Data Package, or, where no linked Budget Data Package is available, to provide enough information to allow a user to manually or automatically cross-reference with another published source of budget and project information.'
      properties:
        id:
          title: ID
          description: An identifier for the budget line item which provides funds for this contracting process. This identifier should be possible to cross-reference against the provided data source.
          nullable: true
          oneOf:
            - type: string
            - type: integer
        description:
          title: Budget Source
          description: 'A short free text description of the budget source. May be used to provide the title of the budget line, or the programme used to fund this project.'
          type: string
          nullable: true
        amount:
          title: Amount
          description: 'The value reserved in the budget for this contracting process. A negative value indicates anticipated income to the budget as a result of this contracting process, rather than expenditure. Where the budget is drawn from multiple sources, the budget breakdown extension can be used.'
          allOf:
            - $ref: '#/components/schemas/Value'
        project:
          title: Project title
          description: 'The name of the project through which this contracting process is funded (if applicable). Some organizations maintain a registry of projects, and the data should use the name by which the project is known in that registry. No translation option is offered for this string, as translated values can be provided in third-party data, linked from the data source above.'
          type: string
          nullable: true
        projectID:
          title: Project identifier
          description: 'An external identifier for the project that this contracting process forms part of, or is funded via (if applicable). Some organizations maintain a registry of projects, and the data should use the identifier from the relevant registry of projects.'
          nullable: true
          oneOf:
            - type: string
            - type: integer
        uri:
          title: Linked budget information
          description: 'A URI pointing directly to a machine-readable record about the budget line-item or line-items that fund this contracting process. Information can be provided in a range of formats, including using IATI, the Open Fiscal Data Standard or any other standard which provides structured data on budget sources. Human readable documents can be included using the planning.documents block.'
          type: string
          nullable: true
          format: uri
        source:
          title: Data Source
          description: '(Deprecated in 1.1) Used to point either to a corresponding Budget Data Package, or to a machine or human-readable source where users can find further information on the budget line item identifiers, or project identifiers, provided here.'
          type: string
          nullable: true
          deprecated: true
            #deprecatedVersion: '1.1'
            #description: 'The budget data source field was intended to link to machine-readable data about the budget for a contracting process, but has been widely mis-used to provide free-text descriptions of budget providers. As a result, it has been removed from version 1.1. budget/uri can be used to provide a link to machine-readable budget information, and budget/description can be used to provide human-readable information on the budget source.'
          format: uri
      #patternProperties:
      #  '^(source_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
      #    type: string
      #      nullable: true
      #  '^(description_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
      #    type: string
      #      nullable: true
      # '^(project_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
      #    type: string
      #      nullable: true
      
      
    Transaction:
      type: object
      title: Transaction information
      description: 'A spending transaction related to the contracting process. Draws upon the data models of the [Fiscal Data Package](https://frictionlessdata.io/specs/fiscal-data-package/) and the [International Aid Transparency Initiative](http://iatistandard.org/activity-standard/iati-activities/iati-activity/transaction/) and should be used to cross-reference to more detailed information held using a Fiscal Data Package, IATI file, or to provide enough information to allow a user to manually or automatically cross-reference with some other published source of transactional spending data.'
      required:
        - id
      properties:
        id:
          title: ID
          description: A unique identifier for this transaction. This identifier should be possible to cross-reference against the provided data source. For IATI this is the transaction reference.
          oneOf:
            - type: string
            - type: integer
          minLength: 1
        source:
          title: Data source
          description: 'Used to point either to a corresponding Fiscal Data Package, IATI file, or machine or human-readable source where users can find further information on the budget line item identifiers, or project identifiers, provided here.'
          type: string
          nullable: true
          format: uri
        date:
          title: Date
          description: The date of the transaction
          type: string
          nullable: true
          format: date-time
        value:
          allOf:
            - $ref: '#/components/schemas/Value'
          title: Value
          description: The value of the transaction.
        payer:
          allOf:
            - $ref: '#/components/schemas/OrganizationReference'
          title: Payer
          description: An organization reference for the organization from which the funds in this transaction originate.
        payee:
          allOf:
            - $ref: '#/components/schemas/OrganizationReference'
          title: Payee
          description: An organization reference for the organization which receives the funds in this transaction.
        uri:
          title: Linked spending information
          description: A URI pointing directly to a machine-readable record about this spending transaction.
          type: string
          nullable: true
          format: uri
        amount:
          title: Amount
          description: (Deprecated in 1.1. Use transaction.value instead) The value of the transaction. A negative value indicates a refund or correction.
          allOf:
            - $ref: '#/components/schemas/Value'
          deprecated: true
            #description: This field has been replaced by the `transaction.value` field for consistency with the use of value and amount elsewhere in the standard.
            #deprecatedVersion: '1.1'
        providerOrganization:
          title: Provider organization
          description: (Deprecated in 1.1. Use transaction.payer instead.) The Organization Identifier for the organization from which the funds in this transaction originate. Expressed following the Organizational Identifier standard - consult the documentation and the codelist.
          allOf:
            - $ref: '#/components/schemas/Identifier'
          deprecated: true
            #description: This field has been replaced by the `transaction.payer` field to resolve ambiguity arising from 'provider' being interpreted as relating to the goods or services procured rather than the flow of funds between the parties.
            #deprecatedVersion: '1.1'
        receiverOrganization:
          title: Receiver organization
          description: (Deprecated in 1.1. Use transaction.payee instead). The Organization Identifier for the organization which receives the funds in this transaction. Expressed following the Organizational Identifier standard - consult the documentation and the codelist.
          allOf:
            - $ref: '#/components/schemas/Identifier'
          deprecated: true
            #description: This field has been replaced by the `transaction.payee` field to resolve ambiguity arising from 'receiver' being interpreted as relating to the goods or services procured rather than the flow of funds between the parties.
            #deprecatedVersion: '1.1'
            
    OrganizationReference:
      properties:
        name:
          type: string
          nullable: true
          description: The name of the party being referenced. This must match the name of an entry in the parties section.
          title: Organization name
          minLength: 1
        id:
          oneOf:
            - type: string
            - type: integer
          description: The id of the party being referenced. This must match the id of an entry in the parties section.
          title: Organization ID
        identifier:
          title: Primary identifier
          description: 'The primary identifier for this organization. Identifiers that uniquely pick out a legal entity should be preferred. Consult the [organization identifier guidance](https://standard.open-contracting.org/latest/en/schema/identifiers/) for the preferred scheme and identifier to use.'
          deprecated: true
            #deprecatedVersion: '1.1'
            #description: 'From version 1.1, organizations should be referenced by their identifier and name in a document, and detailed legal identifier information should only be provided in the relevant cross-referenced entry in the parties section at the top level of a release.'
          allOf:
            - $ref: '#/components/schemas/Identifier'
        address:
          deprecated: true
            #deprecatedVersion: '1.1'
            #description: 'From version 1.1, organizations should be referenced by their identifier and name in a document, and address information should only be provided in the relevant cross-referenced entry in the parties section at the top level of a release.'
          allOf:
            - $ref: '#/components/schemas/Address'
          description: (Deprecated outside the parties section)
          title: Address
        additionalIdentifiers:
          type: array
          deprecated: true
            #deprecatedVersion: '1.1'
            #description: 'From version 1.1, organizations should be referenced by their identifier and name in a document, and additional identifiers for an organization should be provided in the relevant cross-referenced entry in the parties section at the top level of a release.'
          items:
            $ref: '#/components/schemas/Identifier'
          title: Additional identifiers
          uniqueItems: true
          #wholeListMerge: true
          description: '(Deprecated outside the parties section) A list of additional / supplemental identifiers for the organization, using the [organization identifier guidance](https://standard.open-contracting.org/latest/en/schema/identifiers/). This can be used to provide an internally used identifier for this organization in addition to the primary legal entity identifier.'
        contactPoint:
          deprecated: true
            #deprecatedVersion: '1.1'
            #description: 'From version 1.1, organizations should be referenced by their identifier and name in a document, and contact point information for an organization should be provided in the relevant cross-referenced entry in the parties section at the top level of a release.'
          allOf:
            - $ref: '#/components/schemas/ContactPoint'
          description: (Deprecated outside the parties section)
          title: Contact point
      type: object
      description: The id and name of the party being referenced. Used to cross-reference to the parties section
      title: Organization reference
      
      
    Organization:
      title: Organization
      description: A party (organization)
      type: object
      properties:
        name:
          title: Common name
          description: 'A common name for this organization or other participant in the contracting process. The identifier object provides a space for the formal legal name, and so this may either repeat that value, or may provide the common name by which this organization or entity is known. This field may also include details of the department or sub-unit involved in this contracting process.'
          type: string
          nullable: true
        id:
          type: string
          description: 'The ID used for cross-referencing to this party from other sections of the release. This field may be built with the following structure {identifier.scheme}-{identifier.id}(-{department-identifier}).'
          title: Entity ID
        identifier:
          title: Primary identifier
          description: 'The primary identifier for this organization or participant. Identifiers that uniquely pick out a legal entity should be preferred. Consult the [organization identifier guidance](https://standard.open-contracting.org/latest/en/schema/identifiers/) for the preferred scheme and identifier to use.'
          allOf:
            - $ref: '#/components/schemas/Identifier'
        additionalIdentifiers:
          title: Additional identifiers
          description: 'A list of additional / supplemental identifiers for the organization or participant, using the [organization identifier guidance](https://standard.open-contracting.org/latest/en/schema/identifiers/). This can be used to provide an internally used identifier for this organization in addition to the primary legal entity identifier.'
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          uniqueItems: true
          #wholeListMerge: true
        address:
          title: Address
          description: 'An address. This may be the legally registered address of the organization, or may be a correspondence address for this particular contracting process.'
          allOf:
            - $ref: '#/components/schemas/Address'
        contactPoint:
          title: Contact point
          description: Contact details that can be used for this party.
          allOf:
            - $ref: '#/components/schemas/ContactPoint'
        roles:
          type: array
          items:
            $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_CodeLists.yaml#/components/schemas/PartyRoles'
        details:
          nullable: true
          type: object
          description: Additional classification information about parties can be provided using partyDetail extensions that define particular fields and classification schemes.
          title: Details
      #patternProperties:
      #  '^(name_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
      #    type: string
      #      nullable: true
      
      
    Item:
      title: Item
      type: object
      description: 'A good, service, or work to be contracted.'
      required:
        - id
      properties:
        id:
          title: ID
          description: A local identifier to reference and merge the items by. Must be unique within a given array of items.
          oneOf:
            - type: string
            - type: integer
          minLength: 1
        description:
          title: Description
          description: 'A description of the goods, services to be provided.'
          type: string
          nullable: true
        classification:
          title: Classification
          description: The primary classification for the item.
          allOf:
            - $ref: '#/components/schemas/Classification'
        additionalClassifications:
          title: Additional classifications
          description: An array of additional classifications for the item.
          type: array
          items:
            $ref: '#/components/schemas/Classification'
          uniqueItems: true
          #wholeListMerge: true
        quantity:
          title: Quantity
          description: The number of units to be provided.
          nullable: true
          type: number
        unit:
          title: Unit
          description: 'A description of the unit in which the supplies, services or works are provided (e.g. hours, kilograms) and the unit-price.'
          type: object
          properties:
            scheme:
              allOf: 
                - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_CodeLists.yaml#/components/schemas/UnitClassificationScheme'
            id:
              allOf: 
                - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_CodeLists.yaml#/components/schemas/UnitID'
            name:
              title: Name
              description: Name of the unit.
              nullable: true
              type: string
            value:
              title: Value
              description: The monetary value of a single unit.
              allOf:
                - $ref: '#/components/schemas/Value'
            uri:
              title: URI
              description: 'The machine-readable URI for the unit of measure, provided by the scheme.'
              format: uri
              type: string
                
          #patternProperties:
          #  '^(name_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
          #    type:
          #      - type: string
          #      - 'null'
      #patternProperties:
      #  '^(description_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
      #    type: string
      #      nullable: true
    Amendment:
      title: Amendment
      type: object
      description: Amendment information
      properties:
        date:
          title: Amendment date
          description: The date of this amendment.
          type: string
          nullable: true
          format: date-time
        rationale:
          title: Rationale
          description: An explanation for the amendment.
          type: string
          nullable: true
        id:
          title: ID
          description: 'An identifier for this amendment: often the amendment number'
          type: string
          nullable: true
        description:
          description: 'A free text, or semi-structured, description of the changes made in this amendment.'
          type: string
          nullable: true
          title: Description
        amendsReleaseID:
          description: Provide the identifier (release.id) of the OCDS release (from this contracting process) that provides the values for this contracting process **before** the amendment was made.
          type: string
          nullable: true
          title: Amended release (identifier)
        releaseID:
          description: Provide the identifier (release.id) of the OCDS release (from this contracting process) that provides the values for this contracting process **after** the amendment was made.
          type: string
          nullable: true
          title: Amending release (identifier)
        changes:
          title: Amended fields
          description: 'An array of change objects describing the fields changed, and their former values. (Deprecated in 1.1)'
          type: array
          items:
            type: object
            properties:
              property:
                title: Property
                description: 'The property name that has been changed relative to the place the amendment is. For example if the contract value has changed, then the property under changes within the contract.amendment would be value.amount. (Deprecated in 1.1)'
                type: string
              former_value:
                title: Former Value
                description: 'The previous value of the changed property, in whatever type the property is. (Deprecated in 1.1)'
                nullable: true
                oneOf:
                  - type: string
                  - type: number
                  - type: integer
                  - type: array
                  - type: object
          deprecated: true
            #description: 'A free-text or semi-structured string describing the changes made in each amendment can be provided in the amendment.description field. To provide structured information on the fields that have changed, publishers should provide releases indicating the state of the contracting process before and after the amendment.'
            #deprecatedVersion: '1.1'
      #patternProperties:
      #  '^(rationale_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
      #    type: string
      #      nullable: true
      
    Classification:
      title: Classification
      description: 'A classification consists of at least two parts: an identifier for the list (scheme) from which the classification is taken, and an identifier for the category from that list being applied. It is useful to also publish a text label and/or URI that users can draw on to interpret the classification.'
      type: object
      properties:
        scheme:
          allOf: 
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_CodeLists.yaml#/components/schemas/ItemClassification'
        id:
          title: ID
          description: The classification code taken from the scheme.
          nullable: true
          oneOf:
            - type: string
            - type: integer
          #versionID: true
        description:
          title: Description
          description: A textual description or title for the classification code.
          type: string
          nullable: true
        uri:
          title: URI
          description: A URI to uniquely identify the classification code.
          type: string
          nullable: true
          format: uri
      #patternProperties:
      #  '^(description_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
      #    type: string
      #      nullable: true
      
      
    Identifier:
      title: Identifier
      description: A unique identifier for a party (organization).
      type: object
      properties:
        scheme:
          allOf: 
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_CodeLists.yaml#/components/schemas/OrganizationScheme'
          #versionID: true
        legalName:
          title: Legal Name
          description: The legally registered name of the organization.
          type: string
          nullable: true
        uri:
          title: URI
          description: 'A URI to identify the organization, such as those provided by [Open Corporates](http://www.opencorporates.com) or some other relevant URI provider. This is not for listing the website of the organization: that can be done through the URL field of the Organization contact point.'
          type: string
          nullable: true
          format: uri
      #patternProperties:
      #  '^(legalName_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
      #    type: string
      #      nullable: true
      
      
    Address:
      title: Address
      description: An address.
      type: object
      properties:
        streetAddress:
          title: Street address
          type: string
          nullable: true
          description: 'The street address. For example, 1600 Amphitheatre Pkwy.'
        locality:
          title: Locality
          type: string
          nullable: true
          description: 'The locality. For example, Mountain View.'
        region:
          title: Region
          type: string
          nullable: true
          description: 'The region. For example, CA.'
        postalCode:
          title: Postal code
          type: string
          nullable: true
          description: 'The postal code. For example, 94043.'
        countryName:
          title: Country name
          type: string
          nullable: true
          description: 'The country name. For example, United States.'
      #patternProperties:
      #  '^(countryName_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
      #    type: string
      #      nullable: true
      
      
    ContactPoint:
      title: Contact point
      type: object
      description: 'A person, contact point or department to contact in relation to this contracting process.'
      properties:
        name:
          title: Name
          type: string
          nullable: true
          description: 'The name of the contact person, department, or contact point, for correspondence relating to this contracting process.'
        email:
          title: Email
          type: string
          nullable: true
          description: The e-mail address of the contact point/person.
        telephone:
          title: Telephone
          type: string
          nullable: true
          description: The telephone number of the contact point/person. This should include the international dialing code.
        faxNumber:
          title: Fax number
          type: string
          nullable: true
          description: The fax number of the contact point/person. This should include the international dialing code.
        url:
          title: URL
          type: string
          nullable: true
          description: A web address for the contact point/person.
          format: uri
      #patternProperties:
      #  '^(name_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
      #    type: string
      #      nullable: true
      
      
    Value:
      title: Value
      description: Financial values should be published with a currency attached.
      type: object
      properties:
        amount:
          title: Amount
          description: Amount as a number.
          nullable: true
          type: number
        currency:
          allOf: 
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_CodeLists.yaml#/components/schemas/Currency'
            
    Period:
      title: Period
      description: 'Key events during a contracting process may have a known start date, end date, duration, or maximum extent (the latest date the period can extend to). In some cases, not all of these fields will have known or relevant values.'
      type: object
      properties:
        startDate:
          title: Start date
          description: 'The start date for the period. When known, a precise start date must be provided.'
          type: string
          nullable: true
          format: date-time
        endDate:
          title: End date
          description: 'The end date for the period. When known, a precise end date must be provided.'
          type: string
          nullable: true
          format: date-time
        maxExtentDate:
          description: The period cannot be extended beyond this date. This field can be used to express the maximum available date for extension or renewal of this period.
          format: date-time
          title: Maximum extent
          type: string
          nullable: true
        durationInDays:
          description: 'The maximum duration of this period in days. A user interface can collect or display this data in months or years as appropriate, and then convert it into days when storing this field. This field can be used when exact dates are not known. If a startDate and endDate are set, this field, if used, should be equal to the difference between startDate and endDate. Otherwise, if a startDate and maxExtentDate are set, this field, if used, should be equal to the difference between startDate and maxExtentDate.'
          title: Duration (days)
          nullable: true
          type: integer

    RelatedProcess:
      description: 'A reference to a related contracting process: generally one preceding or following on from the current process.'
      type: object
      title: Related Process
      properties:
        id:
          title: Relationship ID
          description: 'A local identifier for this relationship, unique within this array.'
          type: string
        relationship:
          allOf: 
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_CodeLists.yaml#/components/schemas/RelatedProcess'
        title:
          description: 'The title of the related process, where referencing an open contracting process, this field should match the tender/title field in the related process.'
          title: Related process title
          type: string
          nullable: true
        scheme:
          allOf: 
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_CodeLists.yaml#/components/schemas/RelatedProcess'
        identifier:
          description: 'The identifier of the related process. If the scheme is ''ocid'', this must be an Open Contracting ID (ocid).'
          title: Identifier
          type: string
          nullable: true
        uri:
          format: uri
          description: 'A URI pointing to a machine-readable document, release or record package containing the identified related process.'
          title: Related process URI
          type: string
          nullable: true
          
              
    
    
    
    
    
    
    
    
    
    
    
    
    
    
