openapi: 3.0.0

info:
  title: Sample API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.1.9
servers:
  - url: http://api.example.com/v1
    description: Optional server description, e.g. Main (production) server
  - url: http://staging-api.example.com
    description: Optional server description, e.g. Internal staging server for testing

paths:

#id: 'https://standard.open-contracting.org/schema/1__1__5/record-package-schema.json'
#$schema: 'http://json-schema.org/draft-04/schema#'

  /ocds/RecordPackage:
    get:
      summary: "Returns the requested release with supplied OCID"
      operationId: OCDS.RecordPackage   
      parameters:
      - in: query
        name: "OCID"
        schema:
          type: string
        example: "dd/mm/yy:hh:mm:ss"
        required: true
        description: "OCID of the required release"
      responses:
        '200':
          description: "Returns a release schema"
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RecordPackage'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '404':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/404NotFound'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'



# id: 'https://standard.open-contracting.org/schema/1__1__5/release-package-schema.json'
# $schema: 'http://json-schema.org/draft-04/schema#'

  /ocds/ReleasePackage:
    get:
      summary: "Returns a package of releases"
      operationId: OCDS.ReleasePackage   
      responses:
        '200':
          description: "Returns a release schema"
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ReleasePackage'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '404':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/404NotFound'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'  
 
# id: 'https://standard.open-contracting.org/schema/1__1__5/release-schema.json'
# $schema: 'http://json-schema.org/draft-04/schema#'
         
  /ocds/Record:
    get:
      summary: "Returns the requested record with supplied OCID"
      operationId: OCDS.Record
      parameters:
      - in: query
        name: "OCID"
        schema:
          type: string
        example: "dd/mm/yy:hh:mm:ss"
        required: true
        description: "OCID of the required release"
      responses:
        '200':
          description: "Returns a release schema"
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Record'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '404':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/404NotFound'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'   

# id: 'https://standard.open-contracting.org/schema/1__1__5/release-schema.json'
# $schema: 'http://json-schema.org/draft-04/schema#'
         
  /ocds/Release:
    get:
      summary: "Returns the requested release with supplied OCID"
      operationId: OCDS.Release   
      parameters:
      - in: query
        name: "OCID"
        schema:
          type: string
        example: "dd/mm/yy:hh:mm:ss"
        required: true
        description: "OCID of the required release"
      responses:
        '200':
          description: "Returns a release schema"
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Release'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '404':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/404NotFound'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'   


components:
  schemas:

    
    ReleasePackage:
      type: object
      required:
        - uri
        - publisher
        - publishedDate
        - releases
        - version
      properties:
        uri:
          title: Package identifier
          description: 'The URI of this package that identifies it uniquely in the world. Recommended practice is to use a dereferenceable URI, where a persistent copy of this package is available.'
          type: string
          format: uri
          example: "https://www.crowncommercial.gov.uk/agreements/RM3733"
        version:
          title: OCDS schema version
          description: 'The version of the OCDS schema used in this package, expressed as major.minor For example: 1.0 or 1.1'
          type: string
          pattern: ^(\d+\.)(\d+)$
          example: "1.0"
        extensions:
          title: OCDS extensions
          description: 'An array of OCDS extensions used in this package, in which each array item is the URL of an extension.json file.'
          type: array
          items:
            type: string
            format: uri
        publishedDate:
          title: Published date
          description: 'The date that this package was published. If this package is generated ''on demand'', this date should reflect the date of the last change to the underlying contents of the package.'
          type: string
          format: date-time
          example: "01/01/2020"
        releases:
          title: Releases
          description: An array of one or more OCDS releases.
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/Release'
          uniqueItems: true
        publisher:
          title: Publisher
          description: Information to uniquely identify the publisher of this package.
          type: object
          required:
              - name
          properties:
            name:
              title: Name
              description: The name of the organization or department responsible for publishing this data.
              type: string
              example: "Crown Commercial Services"
            scheme:
              title: Scheme
              description: The scheme that holds the unique identifiers used to identify the item being identified.
              type: string
              nullable: true
              example: "XX-CCS"
            uid:
              title: uid
              description: The unique ID for this entity under the given ID scheme.
              type: string
              nullable: true
              example: "123456789"
            uri:
              title: URI
              description: A URI to identify the publisher.
              type: string
              nullable: true
              format: uri
              example: "https://www.crowncommercial.gov.uk/"
        license:
          title: License
          description: 'A link to the license that applies to the data in this package. A Public Domain Dedication or [Open Definition Conformant](http://opendefinition.org/licenses/) license is recommended. The canonical URI of the license should be used. Documents linked from this file may be under other license conditions.'
          type: string
          nullable: true
          format: uri
          example: "https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
        publicationPolicy:
          title: Publication policy
          description: 'A link to a document describing the publishers [publication policy](https://standard.open-contracting.org/latest/en/implementation/publication_policy/).'
          type: string
          nullable: true
          format: uri
          
    RecordPackage:
      allOf:
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/RecordPackage'
      type: object
      properties:
        uri:
          title: Package identifier
          description: 'The URI of this package that identifies it uniquely in the world. Recommended practice is to use a dereferenceable URI, where a persistent copy of this package is available.'
          example: "https://www.crowncommercial.gov.uk/agreements/RM3733"
        version:
          example: "1.0"
        publisher:
          title: Publisher
          description: Information to uniquely identify the publisher of this package.
          type: object
          required:
              - name
          properties:
            name:
              example: "Crown Commercial Services"
            scheme:
              example: "XX-CCS"
            uid:
              example: "123456789"
            uri:
              example: "https://www.crowncommercial.gov.uk/"
        publicationPolicy:
          example: "https://www.crowncommercial.gov.uk/agreements/publicationPolicy"
        publishedDate:
          example: "01/01/2021"
        records:
          title: Records
          description: An array of one or more OCDS releases
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Record'
            


    Record:
      allOf:
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/Record'
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Pagination_Ext.yaml#/components/schemas/Record'
      title: OCDS Record
      properties:
        ocid:
          title: Open Contracting ID
          description: 'A globally unique identifier for this Open Contracting Process. Composed of an ocid prefix and an identifier for the contracting process. For more information see the [Open Contracting Identifier guidance](https://standard.open-contracting.org/1.1/en/schema/identifiers/)'
          type: string
          minLength: 1
        releases:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/LinkedRelease' 
              - $ref: '#/components/schemas/Release'    
        compiledRelease:
          allOf:
            - $ref: '#/components/schemas/Release'
            
  
          
    LinkedRelease:
      allOf:
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/LinkedRelease'
      title: OCDS Linked Release
      description: >-
        'A list of objects that identify the releases associated with this Open Contracting ID. The releases MUST be sorted into date order in the array, from oldest (at position 0) to newest (last).'
      type: object
      required:
        - url
        - date
      properties:
        url:
          title: Publication policy
          example: "https://www.crowncommercial.gov.uk/agreements/publicationPolicy"

        date:
          title: Release date
          example: "01/01/2020"
      
  
    Release:
      allOf:
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/Release'
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Pagination_Ext.yaml#/components/schemas/Release'
      title: OCDS Release
      type: object

      properties:
        parties:
          items:
            $ref: '#/components/schemas/Organization'
        buyer:
          allOf:
            - $ref: '#/components/schemas/OrganizationReference'
        planning:
          allOf:
            - $ref: '#/components/schemas/Planning'
        tender:
          allOf:
            - $ref: '#/components/schemas/Tender'
        awards:
          items:
            $ref: '#/components/schemas/Award'
        contracts:
          items:
            $ref: '#/components/schemas/Contract'
        relatedProcesses:
          items:
            $ref: '#/components/schemas/RelatedProcess'


      

    Planning:
      allOf:
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/Planning'
      type: object
      properties:  
        budget:
          allOf:
            - $ref: '#/components/schemas/Budget'
        documents:
          items:
            $ref: '#/components/schemas/Document'
        milestones:
          items:
            $ref: '#/components/schemas/Milestone'
         
         
 
            
    TenderRelease:
      title: Tender Release
      description: >-
        Data that must be supplied to publish a draft tender.
      type: object
      required:
        - id
      properties:  
        procurementMethod:
          title: Procurement method
          description: >-
            The procurement method, from the closed
            [method](https://standard.open-contracting.org/1.1/en/schema/codelists/#method)
            codelist.
          type: string
          nullable: true
          #codelist: method.csv
          #openCodelist: false
          allOf:
            - $ref: '#/components/schemas/ProcurementMethod'
        procurementMethodDetails:
          title: Procurement method details
          description: >-
            Additional detail on the procurement method used. This field can be
            used to provide the local name of the particular procurement method
            used.
          type: string
          nullable: true
        procurementMethodRationale:
          title: Procurement method rationale
          description: >-
            Rationale for the chosen procurement method. This is especially
            important to provide a justification in the case of limited tenders or
            direct awards.
          type: string
          nullable: true
        tenderPeriod:
          title: Tender period
          description: >-
              The period when the tender is open for submissions. The end date is
              the closing date for tender submissions.
          allOf:
            - $ref: '#/components/schemas/Period'
          
        enquiryPeriod:
            title: Enquiry period
            description: >-
              The period during which potential bidders may submit questions and
              requests for clarification to the entity managing procurement. Details
              of how to submit enquiries should be provided in attached notices, or
              in submissionMethodDetails. Structured dates for when responses to
              questions will be made can be provided using tender milestones.
            allOf:
            - $ref: '#/components/schemas/Period'
            

    
    Tender:
      allOf:
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/Tender'
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Competitive_Ext.yaml#/components/schemas/Tender'
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Lot_Ext.yaml#/components/schemas/Tender'
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Enquiries_Ext.yaml#/components/schemas/Tender'
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Requirements_Ext.yaml#/components/schemas/Tender'
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_SelectionCriteria_Ext.yaml#/components/schemas/Tender'
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Techniques_Ext.yaml#/components/schemas/Tender'
      title: Tender
      type: object
      properties:  
        procuringEntity:
          allOf:
            - $ref: '#/components/schemas/OrganizationReference'
        items:
          items:
            $ref: '#/components/schemas/Item'
          uniqueItems: true
        value:
          allOf:
            - $ref: '#/components/schemas/Value'
        minValue:
          allOf:
            - $ref: '#/components/schemas/Value'
        awardCriteria:
          description: |-
            The award criteria for the procurement, using the open
            [awardCriteria](https://standard.open-contracting.org/1.1/en/schema/codelists/#award-criteria)
            codelist.
            
            Deprecated Criteria -
            - lowestCost
            - bestProposal
            - bestValueToGovernment  
            - singleBidOnly
        tenderPeriod:
          allOf:
            - $ref: '#/components/schemas/Period'
        enquiryPeriod:
          allOf:
            - $ref: '#/components/schemas/Period'
        awardPeriod:
          allOf:
            - $ref: '#/components/schemas/Period'
        contractPeriod:
          allOf:
            - $ref: '#/components/schemas/Period'
        tenderers:
          items:
            $ref: '#/components/schemas/OrganizationReference'
          #uniqueItems: true
        documents:
          items:
            $ref: '#/components/schemas/Document'
        milestones:
          items:
            $ref: '#/components/schemas/Milestone'
        amendments:
          items:
            $ref: '#/components/schemas/Amendment'
        amendment:
          allOf:
            - $ref: '#/components/schemas/Amendment'
          description: >-
              The use of individual amendment objects has been deprecated. From OCDS
              1.1 information should be provided in the amendments array.
              The single amendment object has been deprecated in favour of
              including amendments in an amendments (plural) array.            
        #patternProperties:
        #  '^(title_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
        #    type: string
        #    default: null
        #  '^(description_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
        #    type: string
        #    default: null
        #  '^(procurementMethodRationale_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
        #    type: string
        #    default: null
        #  '^(awardCriteriaDetails_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
        #    type: string
        #    default: null
        #  '^(submissionMethodDetails_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
        #    type: string
        #    default: null
        #  '^(eligibilityCriteria_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
        #    type: string
        #    default: null
        
        

 
        
        
  
    Award:
      allOf:
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/Award'
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Lot_Ext.yaml#/components/schemas/Award'
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Requirements_Ext.yaml#/components/schemas/Award'
        #patternProperties:
        #  '^(title_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
        #    type: string
        #    default: null
        #  '^(description_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
        #    type: string
        #    default: null
      type: object
      properties: 
        value:
         allOf:
            - $ref: '#/components/schemas/Value'
        suppliers:
          items:
            $ref: '#/components/schemas/OrganizationReference'
        items:
          items:
            $ref: '#/components/schemas/Item'
        contractPeriod:
          allOf:
            - $ref: '#/components/schemas/Period'
        documents:
          items:
            $ref: '#/components/schemas/Document'
        amendments:
          items:
            $ref: '#/components/schemas/Amendment'
        amendment:
          allOf:
            - $ref: '#/components/schemas/Amendment'
   
          
        
        
    Contract:
      allOf:
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/Contract'
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Finance_Ext.yaml#/components/schemas/Contract'
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Requirements_Ext.yaml#/components/schemas/Contract'
       # patternProperties:
       #   '^(title_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
       #     type: string
       #     default: null
       #   '^(description_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
       #     type: string
       #     default: null
      type: object
      properties:
        period:
          allOf:
            - $ref: '#/components/schemas/Period'
        value:
          allOf:
            - $ref: '#/components/schemas/Value'
        items:
          items:
            $ref: '#/components/schemas/Item'
        documents:
          items:
            $ref: '#/components/schemas/Document'
        implementation:
          allOf:
            - $ref: '#/components/schemas/Implementation'
        relatedProcesses:
          items:
            $ref: '#/components/schemas/RelatedProcess'
        milestones:
          items:
            $ref: '#/components/schemas/Milestone'
        amendments:
          items:
            $ref: '#/components/schemas/Amendment'
        amendment:
          allOf:
            - $ref: '#/components/schemas/Amendment'
       

       
    Implementation:
      allOf:
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/Implementation'
      type: object
      properties:
        transactions:
          items:
            $ref: '#/components/schemas/Transaction'
        milestones:
          items:
            $ref: '#/components/schemas/Milestone'
        documents:
          items:
            $ref: '#/components/schemas/Document'  
 
            
    Milestone:
      allOf:
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/Milestone'
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Lot_Ext.yaml#/components/schemas/Milestone' 
      type: object
      properties:
        documents:
          items:
            $ref: '#/components/schemas/Document'
       # patternProperties:
       #   '^(title_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
      #      type: string
       #     default: null
       #   '^(description_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
       #     type: string
       #     default: null
       


       
    Document:
      allOf:
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/Document'
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Lot_Ext.yaml#/components/schemas/Document' 
      type: object
      properties:
        # this field is added for CCS. Need to check if it is in an Extension
        fileName:
          type: string
          format: binary
          writeOnly: true

       # patternProperties:
       #   '^(title_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
       #     type: string
       #     default: null
       #   '^(description_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
       #     type: string
       #     default: null
       
       
       
    Budget:
      allOf:
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/Budget'
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Finance_Ext.yaml#/components/schemas/Budget' 
      type: object
      properties:   
        amount:
          allOf:
            - $ref: '#/components/schemas/Value'
       # patternProperties:
       #   '^(source_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
       #     type: string
       #     default: null
       #   '^(description_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
      #      type: string
      #      default: null
      #    '^(project_(((([A-Za-z]{2,3}(-([A-Zaopenapi: 3.0.0



       
    Transaction:
      allOf:
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/Transaction'
      type: object
      properties: 
        value:
          allOf:
            - $ref: '#/components/schemas/Value'
        payer:
          allOf:
            - $ref: '#/components/schemas/OrganizationReference'
        payee:
          allOf:
            - $ref: '#/components/schemas/OrganizationReference'
        amount:
          allOf:
            - $ref: '#/components/schemas/Value'
        providerOrganization:
          allOf:
            - $ref: '#/components/schemas/Identifier'
        receiverOrganization:
          allOf:
            - $ref: '#/components/schemas/Identifier'
          
            
    OrganizationReference:
      allOf:
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/OrganizationReference'
      type: object
      properties:  
        identifier:
          allOf:
            - $ref: '#/components/schemas/Identifier'
        address:
          allOf:
            - $ref: '#/components/schemas/Address'
        additionalIdentifiers:
          items:
            $ref: '#/components/schemas/Identifier'
        contactPoint:
          allOf:
            - $ref: '#/components/schemas/ContactPoint'
        
        
        
    Organization:
      allOf:
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/Organization'
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Scale_Ext.yaml#/components/schemas/Organization'
      type: object
      properties:
        identifier:
          allOf:
            - $ref: '#/components/schemas/Identifier'
        additionalIdentifiers:
          items:
            $ref: '#/components/schemas/Identifier'
        address:
          allOf:
            - $ref: '#/components/schemas/Address'
        contactPoint:
          allOf:
            - $ref: '#/components/schemas/ContactPoint'
        details:
          type: object
          nullable: true
          description: >-
              Additional classification information about parties can be provided
              using partyDetail extensions that define particular properties and
              classification schemes.
          title: Details
          allOf:
            - $ref: '#/components/schemas/OrganizationDetail'
       # patternProperties:
       #   '^(name_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
       #     type: string
       #     default: null
        
       
#
    OrganizationDetail:
      type: object
      description: "Additional attributes for the Organization object required for CCS Organization Service"
      required:
      - creationDate
      - countryCode
      - companyType
      - is_sme
      - is_vcse
      - status
      - active
      properties:
        creationDate:
          description: "Date of organisation creation"
          type: "string"
          example: "DD/MM/YY" 
        countryCode:
          description: "Country code of incorporation"
          type: "string"
          example: "UK" 
        companyType:
          description: "Type of company"
          type: "string"
          example: "Type of company"
        is_sme:
          description: "Is company SME (Small Medium Enterprise)?"
          type: "boolean"
          example: "1"          
        is_vcse:
          description: "IS VCSE?"
          type: "boolean"
          example: "1" 
        status:
          description: "Organisation Status"
          type: "string"
          example: "Organisation status" 
        active:
          description: "Is organisation active?"
          type: "boolean"
          example: "1" 
          
    
          
#           
    Item:
      allOf:
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/Item'
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Lot_Ext.yaml#/components/schemas/Item'
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Location_Ext.yaml#/components/schemas/Item'
      type: object
      properties:
        classification:
          allOf:
            - $ref: '#/components/schemas/Classification'
        additionalClassifications:
          items:
            $ref: '#/components/schemas/Classification'
        unit:
          type: object
          properties:
            value:
              title: Value
              description: The monetary value of a single unit.
              allOf:
                - $ref: '#/components/schemas/Value'

         
    Amendment:
      allOf:
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/Amendment'

        
    Classification:
      allOf:
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/Classification'
        
        

         
    Identifier:
      allOf:
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/Identifier'
      title: Identifier
      description: A unique identifier for a party (organization).
      type: object
      properties:
        scheme:
          allOf: 
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_CodeLists.yaml#/components/schemas/OrganizationScheme'
          title: Scheme
          description: >-
            Organization identifiers should be taken from an existing organization
            identifier list. The scheme field is used to indicate the list or
            register from which the identifier is taken. This value should be
            taken from the [Organization Identifier
            Scheme](https://standard.open-contracting.org/1.1/en/schema/codelists/#organization-identifier-scheme)
            codelist.
          type: string
          #limit to UK CCS Schemes
          enum:
            -  GB-COH
            -  GB-MPR
            -  GB-NIC
            -  GB-CHC
            -  GB-SC
            -  GB-WALEDU
            -  GB-SCOTEDU
            -  GB-GOR
            -  GB-LANI
            -  GB-NHS
          example: GB-COH
          nullable: true
          #ID seems to be missing from Vanilla, seems strange!
        id:
          title: ID
          description: The identifier of the organization in the selected scheme.
          oneOf:
            - type: string
            - type: integer
          example: abc12345
          nullable: true
            #versionId: true
        #patternProperties:
        #  '^(legalName_(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)))$':
         #   type: string
         #   default: null
         
         
         
    Address:
      allOf:
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/Address'
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_CountryCode_Ext.yaml#/components/schemas/Address'
      type: object
      properties:
        streetAddress:
          description: 'The street address. For example, 1600 Amphitheatre Pkwy.'
        locality:
          description: 'The locality. For example, Mountain View.'
        region:
          description: 'The region. For example, CA.'
        postalCode:
          description: 'The postal code. For example, 94043.'
        countryName:
          description: 'The country name. For example, United States.'
            
         
    ContactPoint:
      allOf:
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/ContactPoint'
    
       
    Value:
      allOf:
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/Value'
      type: object
      properties:
        currency:
          allOf: 
            - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_CodeLists.yaml#/components/schemas/Currency'
       

    Period:
      allOf:
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/Value'


            
    RelatedProcess:
      allOf:
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/RelatedProcess'
        
        
# ----------------------- End Of Vanilla -------------------------------

  
            
# ----------------------- Start Of Requirements Extension -------------- 

    Criterion:
      allOf:
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Requirements_Ext.yaml#/components/schemas/Criterion'
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Selection_Ext.yaml#/components/schemas/Criterion' 
      properties:
        relatesTo:
          title: Related schema element
          description: >-
            'The schema element that the criterion judges, evaluates or assesses. For example criterion may be defined against items or against bidders.'
          
            * Tenderer - The criterion evaluates or assesses a tenderer
            * Item - The criterion evaluates or assesses an item
        relatedItem:
          title: Related item
          description: Where relatesTo = "item" this field must be populated with the id of the item in this tender section which the criterion relates to. Where relatesTo <> "item" this field should be omitted.
          nullable: true
        requirementGroups:
          items:
            $ref: '#/components/schemas/RequirementGroup'

      
    RequirementGroup:
      allOf:
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Requirements_Ext.yaml#/components/schemas/RequirementGroup' 
      properties:
        requirements:
          items:
            $ref: '#/components/schemas/Requirement'

      
    Requirement:
      allOf:
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Requirements_Ext.yaml#/components/schemas/Requirement'
      properties:
        period:
          allOf:
            - $ref: '#/components/schemas/Period'
      minProperties: 1
      
      
    RequirementResponse:
      allOf:
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Requirements_Ext.yaml#/components/schemas/RequirementResponse'
      properties:
        period:
          allOf:
            - $ref: '#/components/schemas/Period'
        requirement:
          allOf:
            - $ref: '#/components/schemas/RequirementReference'
        relatedTenderer:
          allOf:
            - $ref: '#/components/schemas/OrganizationReference'
      minProperties: 1
      
    RequirementReference:
      allOf:
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Requirements_Ext.yaml#/components/schemas/RequirementReference'
      
    Bid:
      allOf:
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Requirements_Ext.yaml#/components/schemas/Bid'
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Lot_Ext.yaml#/components/schemas/Bid'
      properties:
        requirementResponses:
          allOf:
            - $ref: '#/components/schemas/RequirementResponse'
            
            
# -----------------------End Of Requirements Extension -------------- 

# ----------------------- Start Of Enquiries Extension -------------- 

          
      
      
    Enquiry:
      allOf:
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Enquiries_Ext.yaml#/components/schemas/Enquiry'
      properties:
        author:
          allOf:
              - $ref: '#/components/schemas/OrganizationReference'
              
# ----------------------- End Of Enquiries Extension -------------- 

# ----------------------- Start Of Location Extension -------------- 

          
      
      
    Location:
      allOf:
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Location_Ext.yaml#/components/schemas/Location'

              
# ----------------------- End Of Location Extension -------------- 

# ----------------------- Start Of Lot Extension -------------- 
 
            
    Lot:
      allOf:
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Lot_Ext.yaml#/components/schemas/Lot'
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Selection_Ext.yaml#/components/schemas/Lot'
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Techniques_Ext.yaml#/components/schemas/Lot'
      properties:
        value:
          allOf:
            - $ref: '#/components/schemas/Value'
        contractPeriod:
          allOf:
            - $ref: '#/components/schemas/Period'
            
    LotGroup:
      allOf:
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Lot_Ext.yaml#/components/schemas/LotGroup'
      properties:
        maximumValue:
          allOf:
            - $ref: '#/components/schemas/Value'
            
            
                    
# ----------------------- End Of Lot Extension -------------- 

# ----------------------- Start Of Finance Selection Crieria --------------     
            
            
    Finance:
      allOf:
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Finance_Ext.yaml#/components/schemas/Finance'
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Lot_Ext.yaml#/components/schemas/Finance'
        
# ----------------------- End OfFinance Extension -------------- 

# ----------------------- Start Of Lot Selection Crieria --------------     
  
          
    SelectionCriteria:
      allOf:
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_SelectionCriteria_Ext.yaml#/components/schemas/SelectionCriteria'
      properties:
        criteria:
          items:
            $ref: '#/components/schemas/SelectionCriterion'

      
    SelectionCriterion:
      allOf:
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_SelectionCriteria_Ext.yaml#/components/schemas/SelectionCriteria'
        
        
# ----------------------- End Of Lot Extension -------------- 

# ----------------------- Start Of Techniques  Extension --------------  

    Techniques:
      allOf:
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Techniques_Ext.yaml#/components/schemas/Techniques'
      properties:
        frameworkAgreement:
          allOf:
            - $ref: '#/components/schemas/FrameworkAgreement'
        dynamicPurchasingSystem:
          allOf:
            - $ref: '#/components/schemas/DynamicPurchasingSystem'
        electronicAuction:
          allOf:
            - $ref: '#/components/schemas/ElectronicAuction'
            
            
    FrameworkAgreement:
      allOf:
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Techniques_Ext.yaml#/components/schemas/FrameworkAgreement'      
      properties:
        value:
          allOf:
            - $ref: '#/components/schemas/Value'
        period:
          allOf:
            - $ref: '#/components/schemas/Period'


    DynamicPurchasingSystem:
      allOf:
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Techniques_Ext.yaml#/components/schemas/DynamicPurchasingSystem' 
        
    ElectronicAuction:
      allOf:
        -  $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Techniques_Ext.yaml#/components/schemas/DynamicPurchasingSystem'      

# ----------------------- End Of Techniques  Extension -------------- 



        

        


# Reusable Enums    


    ProcurementMethod:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_CodeLists.yaml#/components/schemas/ProcurementMethod'
      description: >-
        Different options for procurement. There are several types-

          * open
          * selective
          * limited
          * direct
       

    
    ProcessStage:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_CodeLists.yaml#/components/schemas/ProcessStage'

          
    TenderStatus:
       allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_CodeLists.yaml#/components/schemas/ProcessStage'
        
            
    Language:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_CodeLists.yaml#/components/schemas/Language'
              
    Currency:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_CodeLists.yaml#/components/schemas/Currency'
              
    FileFormat:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_CodeLists.yaml#/components/schemas/FileFormat'