openapi: 3.0.0
info:
  title: CCS OCDS API Defintion
  description: 'Standard definition for OCDS objects within CCS. Includes the chosen extentsion from the Vanilla OCDS definition and extensions held in ''https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/'''
  version: 0.0.2
servers:
  - url: 'http://api.example.com/v1'
    description: 'Optional server description, e.g. Main (production) server'
  - url: 'http://staging-api.example.com'
    description: 'Optional server description, e.g. Internal staging server for testing'
paths:
  /ocds/RecordPackage:
    get:
      summary: Returns the requested release with supplied OCID
      operationId: OCDS.RecordPackage
      parameters:
        - in: query
          name: OCID
          schema:
            type: string
          example: 'dd/mm/yy:hh:mm:ss'
          required: true
          description: OCID of the required release
      responses:
        '200':
          description: Returns a release schema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordPackage'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '404':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/404NotFound'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
  /ocds/ReleasePackage:
    get:
      summary: Returns a package of releases
      operationId: OCDS.ReleasePackage
      responses:
        '200':
          description: Returns a release schema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleasePackage'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '404':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/404NotFound'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
  /ocds/Record:
    get:
      summary: Returns the requested record with supplied OCID
      operationId: OCDS.Record
      parameters:
        - in: query
          name: OCID
          schema:
            type: string
          example: 'dd/mm/yy:hh:mm:ss'
          required: true
          description: OCID of the required release
      responses:
        '200':
          description: Returns a release schema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Record'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '404':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/404NotFound'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
  /ocds/Release:
    get:
      summary: Returns the requested release with supplied OCID
      operationId: OCDS.Release
      parameters:
        - in: query
          name: OCID
          schema:
            type: string
          example: 'dd/mm/yy:hh:mm:ss'
          required: true
          description: OCID of the required release
      responses:
        '200':
          description: Returns a release schema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Release'
        '403':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/403Forbidden'
        '404':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/404NotFound'
        '500':
          $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Responses.yaml#/components/responses/500InternalServerError'
components:
  schemas:
    NullObject:
      description: Always is NULL in CCS
      
    ReleasePackage:
      type: object
      required:
        - uri
        - publisher
        - publishedDate
        - releases
        - version
      properties:
        uri:
          title: Package identifier
          description: 'The URI of this package that identifies it uniquely in the world. Recommended practice is to use a dereferenceable URI, where a persistent copy of this package is available.'
          type: string
          format: uri
          example: 'https://www.crowncommercial.gov.uk/agreements/RM3733'
        version:
          title: OCDS schema version
          description: 'The version of the OCDS schema used in this package, expressed as major.minor For example: 1.0 or 1.1'
          type: string
          pattern: ^(\d+\.)(\d+)$
          example: '1.0'
        extensions:
          title: OCDS extensions
          description: 'An array of OCDS extensions used in this package, in which each array item is the URL of an extension.json file.'
          type: array
          items:
            type: string
            format: uri
        publishedDate:
          title: Published date
          description: 'The date that this package was published. If this package is generated ''on demand'', this date should reflect the date of the last change to the underlying contents of the package.'
          type: string
          format: date-time
          example: 01/01/2020
        releases:
          title: Releases
          description: An array of one or more OCDS releases.
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/Release'
          uniqueItems: true
        publisher:
          title: Publisher
          description: Information to uniquely identify the publisher of this package.
          type: object
          required:
            - name
          properties:
            name:
              title: Name
              description: The name of the organization or department responsible for publishing this data.
              type: string
              example: Crown Commercial Services
            scheme:
              title: Scheme
              description: The scheme that holds the unique identifiers used to identify the item being identified.
              type: string
              nullable: true
              example: XX-CCS
            uid:
              title: uid
              description: The unique ID for this entity under the given ID scheme.
              type: string
              nullable: true
              example: '123456789'
            uri:
              title: URI
              description: A URI to identify the publisher.
              type: string
              nullable: true
              format: uri
              example: 'https://www.crowncommercial.gov.uk/'
        license:
          title: License
          description: 'A link to the license that applies to the data in this package. A Public Domain Dedication or [Open Definition Conformant](http://opendefinition.org/licenses/) license is recommended. The canonical URI of the license should be used. Documents linked from this file may be under other license conditions.'
          type: string
          nullable: true
          format: uri
          example: 'https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/'
        publicationPolicy:
          title: Publication policy
          description: 'A link to a document describing the publishers [publication policy](https://standard.open-contracting.org/latest/en/implementation/publication_policy/).'
          type: string
          nullable: true
          format: uri
          
    RecordPackage:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/RecordPackage'
        - type: object
          properties:
            uri:
              example: 'https://www.crowncommercial.gov.uk/package'
            version:
              example: '1.0'
            publisher:
              type: object
              required:
                - name
              properties:
                name:
                  example: Crown Commercial Services
                scheme:
                  example: XX-CCS
                uid:
                  example: '123456789'
                uri:
                  example: 'https://www.crowncommercial.gov.uk/'
            publicationPolicy:
              example: 'https://www.crowncommercial.gov.uk/agreements/publicationPolicy'
            publishedDate:
              example: 01/01/2021
            records:
              type: array
              items:
                $ref: '#/components/schemas/Record'
            
    Record:
      title: OCDS Record
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/Record'
        - type: object
          properties:
            releases:
              type: array
              items:
                $ref: '#/components/schemas/LinkedRelease'
            compiledRelease:
              $ref: '#/components/schemas/Release'
            versionedRelease:
              $ref: '#/components/schemas/NullObject'
          
    LinkedRelease:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/LinkedRelease'
        - type: object
          required:
            - url
            - date
          properties:
            url:
              example: 'https://www.crowncommercial.gov.uk/package/record/release'
            date:
              example: 01/01/2020
          
    Release:
      title: OCDS Release
      type: object
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/Release'
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Pagination_Ext.yaml#/components/schemas/Release'
        - type: object
          properties:
            parties:
              items:
                $ref: '#/components/schemas/Organization'
            buyer:
              $ref: '#/components/schemas/OrganizationReference'
            planning:
              $ref: '#/components/schemas/Planning'
            tender:
              $ref: '#/components/schemas/Tender'
            awards:
              items:
                $ref: '#/components/schemas/Award'
            contracts:
              items:
                $ref: '#/components/schemas/Contract'
            relatedProcesses:
             items:
                $ref: '#/components/schemas/RelatedProcess'
            
    Planning:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/Planning'
        - type: object
          properties:
            budget:
              $ref: '#/components/schemas/Budget'
            documents:
              items:
                $ref: '#/components/schemas/Document'
            milestones:
              items:
                $ref: '#/components/schemas/Milestone'
            
    TenderRelease:
      title: Tender Release
      description: Data that must be supplied to publish a draft tender.
      type: object
      required:
        - id
      properties:
        procurementMethod:
          title: Procurement method
          description: 'The procurement method, from the closed [method](https://standard.open-contracting.org/1.1/en/schema/codelists/#method) codelist.'
          type: string
          nullable: true
          allOf:
            - $ref: '#/components/schemas/ProcurementMethod'
        procurementMethodDetails:
          title: Procurement method details
          description: Additional detail on the procurement method used. This field can be used to provide the local name of the particular procurement method used.
          type: string
          nullable: true
        procurementMethodRationale:
          title: Procurement method rationale
          description: Rationale for the chosen procurement method. This is especially important to provide a justification in the case of limited tenders or direct awards.
          type: string
          nullable: true
        tenderPeriod:
          title: Tender period
          description: The period when the tender is open for submissions. The end date is the closing date for tender submissions.
          allOf:
            - $ref: '#/components/schemas/Period'
        enquiryPeriod:
          title: Enquiry period
          description: 'The period during which potential bidders may submit questions and requests for clarification to the entity managing procurement. Details of how to submit enquiries should be provided in attached notices, or in submissionMethodDetails. Structured dates for when responses to questions will be made can be provided using tender milestones.'
          allOf:
            - $ref: '#/components/schemas/Period'
            
    Tender:
      title: Tender
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/Tender'
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Competitive_Ext.yaml#/components/schemas/Tender'
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Lot_Ext.yaml#/components/schemas/Tender'
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Enquiries_Ext.yaml#/components/schemas/Tender'
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Requirements_Ext.yaml#/components/schemas/Tender'
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_SelectionCriteria_Ext.yaml#/components/schemas/Tender'
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Techniques_Ext.yaml#/components/schemas/Tender'
        - type: object
          properties:
            id:
              readOnly: true
            procuringEntity:
              $ref: '#/components/schemas/OrganizationReference'
            items:
              items:
                $ref: '#/components/schemas/Item'
              uniqueItems: true
            value:
              $ref: '#/components/schemas/Value'
            minValue:
              $ref: '#/components/schemas/Value'
            awardCriteria:
              description: |-
                The award criteria for the procurement, using the open
                [awardCriteria](https://standard.open-contracting.org/1.1/en/schema/codelists/#award-criteria)
                codelist.

                Deprecated Criteria -
                - lowestCost
                - bestProposal
                - bestValueToGovernment  
                - singleBidOnly
            tenderPeriod:
              $ref: '#/components/schemas/Period'
            enquiryPeriod:
              $ref: '#/components/schemas/Period'
            awardPeriod:
              $ref: '#/components/schemas/Period'
            contractPeriod:
              $ref: '#/components/schemas/Period'
            tenderers:
              items:
                $ref: '#/components/schemas/OrganizationReference'
            documents:
              items:
                $ref: '#/components/schemas/Document'
            milestones:
              items:
                $ref: '#/components/schemas/Milestone'
            amendments:
              items:
                $ref: '#/components/schemas/Amendment'
            amendment:
              $ref: '#/components/schemas/Amendment'
   
    Award:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/Award'
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Lot_Ext.yaml#/components/schemas/Award'
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Requirements_Ext.yaml#/components/schemas/Award'
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_BidStatisticDetails_Ext.yaml#/components/schemas/Award'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/Value'
            suppliers:
              items:
                $ref: '#/components/schemas/OrganizationReference'
            items:
              items:
                $ref: '#/components/schemas/Item'
            contractPeriod:
              $ref: '#/components/schemas/Period'
            documents:
             items:
                $ref: '#/components/schemas/Document'
            amendments:
              items:
                $ref: '#/components/schemas/Amendment'
            #amendment:
             # This is deprecated and no reason why CCS should use this
             #relatedLots:
             #$ref: '#/components/schemas/RelatedLot'
            requirementReaponses:
              type: array
              items:
                $ref: '#/components/schemas/RequirementResponse'
            lots:
              items:
                $ref: '#/components/schemas/Lot'
            #lotDetails:
              # This is inherited from the Lot Extension and is not separate object. Its just an array of strings
            lotGroups:
              items:
                $ref: '#/components/schemas/LotGroup'
            enquiries:
              items:
                $ref: '#/components/schemas/Enquiry'
            criteria:
              items:
                $ref: '#/components/schemas/Criterion'
            selectionCriteria:
              items:
                $ref: '#/components/schemas/SelectionCriteria'
            technioues:
              items:
                $ref: '#/components/schemas/Techniques'
                
    Contract:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/Contract'
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Finance_Ext.yaml#/components/schemas/Contract'
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Requirements_Ext.yaml#/components/schemas/Contract'
        - type: object
          properties:
            period:
              $ref: '#/components/schemas/Period'
            value:
              $ref: '#/components/schemas/Value'
            items:
              items:
                $ref: '#/components/schemas/Item'
            documents:
              items:
                $ref: '#/components/schemas/Document'
            implementation:
              allOf:
                - $ref: '#/components/schemas/Implementation'
            relatedProcesses:
              items:
                $ref: '#/components/schemas/RelatedProcess'
            milestones:
              items:
                $ref: '#/components/schemas/Milestone'
            amendments:
              items:
                $ref: '#/components/schemas/Amendment'
            amendment:
              $ref: '#/components/schemas/Amendment'
          
    Implementation:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/Implementation'
        - type: object
          properties:
            transactions:
              items:
                $ref: '#/components/schemas/Transaction'
            milestones:
              items:
                $ref: '#/components/schemas/Milestone'
            documents:
              items:
                $ref: '#/components/schemas/Document'
            
    Milestone:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/Milestone'
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Lot_Ext.yaml#/components/schemas/Milestone'
        - type: object
          properties:
            documents:
              items:
                $ref: '#/components/schemas/Document'
            #relatedLots:
              #Just an array of Strings so should not change
            
    Document:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/Document'
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Lot_Ext.yaml#/components/schemas/Document'
        - type: object
          properties:
            fileName:
              type: string
              format: binary
              writeOnly: true
            #relatedLots:
              #Just an array of Strings so should not change
          
    Budget:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/Budget'
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Finance_Ext.yaml#/components/schemas/Budget'
        - type: object
          properties:
            amount:
              $ref: '#/components/schemas/Value'
            #projectID:
              #Just an array of Strings or Integers so should not change for CCS as a whole but on a case by case basis.
            finance:
              $ref: '#/components/schemas/Finance'
          
    Transaction:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/Transaction'
        - type: object
          properties:
            #id:
               # Just an array of Strings or Integers so should not change for CCS as a whole but on a case by case basis.
            value:
              $ref: '#/components/schemas/Value'
            payer:
              $ref: '#/components/schemas/OrganizationReference'
            payee:
              $ref: '#/components/schemas/OrganizationReference'
            amount:
              $ref: '#/components/schemas/Value'
            providerOrganization:
              $ref: '#/components/schemas/Identifier'
            receiverOrganization:
              $ref: '#/components/schemas/Identifier'
          
    OrganizationReference:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/OrganizationReference'
        - type: object
          properties:
            id:
              # Just an array of Strings or Integers for CCS as a whole this will be an external scheme identifier
              type: string
              example: GB-COH-123456
              pattern: '[A-Z]{2}-[A-Z]{3}-[A-Z,0-9]+'
            identifier:
              $ref: '#/components/schemas/Identifier'
            address:
              $ref: '#/components/schemas/Address'
            additionalIdentifiers:
              items:
                $ref: '#/components/schemas/Identifier'
            contactPoint:
              $ref: '#/components/schemas/ContactPoint'
          
    Organization:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/Organization'
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Scale_Ext.yaml#/components/schemas/Organization'
        - type: object
          properties:
            identifier:
              $ref: '#/components/schemas/Identifier'
            id:
              # Just an array of Strings or Integers so should not change for CCS as a whole but on a case by case basis.
              example: GB-COH-123456
              pattern: '[A-Z]{2}-[A-Z]{3}-[A-Z,0-9]+'
            additionalIdentifiers:
              items:
                $ref: '#/components/schemas/Identifier'
            address:
              $ref: '#/components/schemas/Address'
            contactPoint:
              $ref: '#/components/schemas/ContactPoint'
            details:
              $ref: '#/components/schemas/OrganizationDetail'
            roles:
              type: array
              items:
                $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_CodeLists.yaml#/components/schemas/PartyRole'
            
    OrganizationDetail:
      type: object
      description: Additional attributes for the Organization object required for CCS Organization Service
      required:
        - creationDate
        - countryCode
        - companyType
        - scale
        - is_vcse
        - status
        - active
      properties:
        scale:
          description: The size or scale of the organization. (isSME = is(Scale=sme))
        creationDate:
          description: Date of organisation creation
          type: string
          example: DD/MM/YY
        countryCode:
          description: Country code of incorporation
          type: string
          example: UK
        companyType:
          description: Type of company
          type: string
          example: Type of company
        is_vcse:
          description: 'Is organisation a Voluntary, Community and Social Enterprise'
          type: boolean
          example: '1'
        status:
          description: Organisation Status
          type: string
          example: Organisation status
        active:
          description: Is organisation active?
          type: boolean
          example: '1'
        # CCS specified details that may need to remove
        organisationId:
          type: string
          nullable: true
        isSme:
          type: boolean
        rightToBuy:
          type: boolean
 
        
          
    Item:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/Item'
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Lot_Ext.yaml#/components/schemas/Item'
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Location_Ext.yaml#/components/schemas/Item'
        - type: object
          properties:
            classification:
              $ref: '#/components/schemas/Classification'
            additionalClassifications:
              items:
                $ref: '#/components/schemas/Classification'
            unit:
              type: object
              properties:
                value:
                  $ref: '#/components/schemas/Value'
            deliveryLocation:
              $ref: '#/components/schemas/Location' 
            deliveryAddress:
              $ref: '#/components/schemas/Address'
                
    Amendment:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/Amendment'
    
    Classification:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/Classification'
        
    Identifier:
      title: Identifier
      description: A unique identifier for a party (organization).
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/Identifier'
        - type: object
          properties:
            scheme:
              $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_CodeLists.yaml#/components/schemas/OrganizationScheme'
            id:
              example: abc1234
          
    Address:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/Address'
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_CountryCode_Ext.yaml#/components/schemas/Address'
      type: object
      properties:
        streetAddress:
          description: 'The street address. For example, 1600 Amphitheatre Pkwy.'
        locality:
          description: 'The locality. For example, Mountain View.'
        region:
          description: 'The region. For example, CA.'
        postalCode:
          description: 'The postal code. For example, 94043.'
        countryName:
          description: 'The country name. For example, United States.'
          
    ContactPoint:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/ContactPoint'
        
    Value:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/Value'
        - type: object
          properties:
            currency:
              $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_CodeLists.yaml#/components/schemas/Currency'
          
    Period:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/Period'
        
    RelatedProcess:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Vanilla.yaml#/components/schemas/RelatedProcess'
        
    Criterion:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Requirements_Ext.yaml#/components/schemas/Criterion'
        - type: object
          properties:
            relatesTo:
              description: |-
                The schema element that the criterion judges, evaluates or assesses. For example criterion may be defined against items or against bidders.

                  * Tenderer - The criterion evaluates or assesses a tenderer
                  * Item - The criterion evaluates or assesses an item
            requirementGroups:
              items:
                $ref: '#/components/schemas/RequirementGroup'
            
    RequirementGroup:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Requirements_Ext.yaml#/components/schemas/RequirementGroup'
        - type: object
          properties:
            requirements:
              items:
                $ref: '#/components/schemas/Requirement'
            
    Requirement:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Requirements_Ext.yaml#/components/schemas/Requirement'
        - type: object
          properties:
            expectedValue:
              $ref: '#/components/schemas/Value'
            minValue:
              $ref: '#/components/schemas/Value'
            maxValue:
              $ref: '#/components/schemas/Value'
            period:
              $ref: '#/components/schemas/Period'
          minProperties: 1
      
    RequirementResponse:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Requirements_Ext.yaml#/components/schemas/RequirementResponse'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/Value'
            period:
              $ref: '#/components/schemas/Period'
            requirement:
              $ref: '#/components/schemas/RequirementReference'
            relatedTenderer:
              $ref: '#/components/schemas/OrganizationReference'
          minProperties: 1
      
    RequirementReference:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Requirements_Ext.yaml#/components/schemas/RequirementReference'
        
    Bid:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Requirements_Ext.yaml#/components/schemas/Bid'
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Lot_Ext.yaml#/components/schemas/Bid'
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_BidStatisticsDetails.yaml#/components/schemas/Bid'
        - type: object
          properties:
            requirementResponses:
              type: array
              items:
                $ref: '#/components/schemas/RequirementResponse'
          
    Enquiry:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Enquiries_Ext.yaml#/components/schemas/Enquiry'
        - type: object
          properties:
            author:
              $ref: '#/components/schemas/OrganizationReference'
          
    Location:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Location_Ext.yaml#/components/schemas/Location'
     # Assuming the loction will always be the vanilla format   
    
        
    Lot:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Lot_Ext.yaml#/components/schemas/Lot'
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_SelectionCriteria_Ext.yaml#/components/schemas/Lot'
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Techniques_Ext.yaml#/components/schemas/Lot'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/Value'
            contractPeriod:
              $ref: '#/components/schemas/Period'
            selectionCriteria:
              $ref: '#/components/schemas/SelectionCriteria'
            techniques:
              $ref: '#/components/schemas/Techniques'
          
    LotGroup:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Lot_Ext.yaml#/components/schemas/LotGroup'
        - type: object
          properties:
            #relatedLots:
            #  $ref: '#/components/schemas/ReleatedLots'
            maximumValue:
              $ref: '#/components/schemas/Value'
          
    Finance:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Finance_Ext.yaml#/components/schemas/Finance'
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Lot_Ext.yaml#/components/schemas/Finance'
        - type: object
          properties:
            financingParty:
              title: Financing party
              description: The party providing this financing arrangement.
              allOf:
                - $ref: '#/components/schemas/OrganizationReference'
            value:
              $ref: '#/components/schemas/Value'
            period:
              $ref: '#/components/schemas/Period'
          #interestRate:
          # interest rate is an object hard coded into Finance
          #relatedLots:
          #  $ref: '#/components/schemas/ReleatedLots'
      

    SelectionCriteria:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_SelectionCriteria_Ext.yaml#/components/schemas/SelectionCriteria'
        - type: object
          properties:
            criteria:
              items:
                $ref: '#/components/schemas/SelectionCriterion'
            
    SelectionCriterion:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_SelectionCriteria_Ext.yaml#/components/schemas/SelectionCriterion'
        
    Techniques:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Techniques_Ext.yaml#/components/schemas/Techniques'
        - type: object
          properties:
            frameworkAgreement:
              $ref: '#/components/schemas/FrameworkAgreement'
            dynamicPurchasingSystem:
              $ref: '#/components/schemas/DynamicPurchasingSystem'
            electronicAuction:
              $ref: '#/components/schemas/ElectronicAuction'
          
    FrameworkAgreement:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Techniques_Ext.yaml#/components/schemas/FrameworkAgreement'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/Value'
            period:
              $ref: '#/components/schemas/Period'
          
    DynamicPurchasingSystem:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Techniques_Ext.yaml#/components/schemas/DynamicPurchasingSystem'
        
    ElectronicAuction:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_Techniques_Ext.yaml#/components/schemas/ElectronicAuction'
        
    ProcurementMethod:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_CodeLists.yaml#/components/schemas/ProcurementMethod'
      description: |-
        Different options for procurement. There are several types-

          * open
          * selective
          * limited
          * direct
          
    ProcessStage:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_CodeLists.yaml#/components/schemas/ProcessStage'
        
    TenderStatus:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_CodeLists.yaml#/components/schemas/TenderStatus'
        
    FileFormat:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/OCDS/OCDS_CodeLists.yaml#/components/schemas/FileFormat'
