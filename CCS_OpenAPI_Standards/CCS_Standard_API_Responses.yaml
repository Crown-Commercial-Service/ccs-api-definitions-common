openapi: 3.0.0

info:
  title: CCS Standard Responses
  description: Defines the standard HTTP responses expected within CCS.
  version: 0.0.2
servers:
  - url: http://api.example.com/v1
    description: Optional server description, e.g. Main (production) server
  - url: http://staging-api.example.com
    description: Optional server description, e.g. Internal staging server for testing
    
paths:
  /ocds/Release:
    get:
      summary: "Returns the requested release with supplied OCID"
      operationId: OCDS.Release   
      responses:
        '200':
          $ref: '#/components/responses/200Success'
        '201':
          $ref: '#/components/responses/201Success'
        '202':
          $ref: '#/components/responses/202Accepted'
        '302':
            $ref: '#/components/responses/302Redirect'
        '400':
          $ref: '#/components/responses/400InvalidRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '409':
          $ref: '#/components/responses/409Conflict'
        '410':
          $ref: '#/components/responses/410Gone'
        '422':
          $ref: '#/components/responses/422ValidationErrors'
        '429':
          $ref: '#/components/responses/429TooManyRequests'
        '500':
          $ref: '#/components/responses/500InternalServerError'
        '501':
          $ref: '#/components/responses/501NotImplemented'
        '502':
          $ref: '#/components/responses/502BadGateway'
        '503':
          $ref: '#/components/responses/503ServiceUnavailable'
        '504':
          $ref: '#/components/responses/504GatewayTimeout'
        '505':
          $ref: '#/components/responses/505HTTPVersionNotSupported'
          
        
      

components:
  responses:
    200Success:
      description: >-
        The 200 (OK) status code indicates that the request has succeeded.
        The payload sent in a 200 response depends on the request method.
      content:
        application/vnd.api+json:
          schema:
            type: string
            example: OK

                
    201Success:
      description: >- 
        The 201 (Created) status code indicates that the request has been
        fulfilled and has resulted in one or more new resources being
        created.  The primary resource created by the request is identified
        by either a Location header field in the response or, if no Location
        field is received, by the effective request URI.
      content:
        application/vnd.api+json:
          schema:
            $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericId'
          example: 1234
            
    202Accepted:
      description: Success (for object creation). Its information is available in the data field at the top level of the response body. The API URL where the object can be retrieved is also returned in the Location header of the response.
      content:
        application/vnd.api+json:
          schema:
            $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericId'
          example: 1234
          
    302Redirect:
      description: >-   
        The 302 (Found) status code indicates that the target resource
        resides temporarily under a different URI.  Since the redirection
        might be altered on occasion, the client ought to continue to use the
        effective request URI for future requests.
           
            
    400InvalidRequest:
      description: >-
        The 400 (Bad Request) status code indicates that the server cannot or
        will not process the request due to something that is perceived to be
        a client error (e.g., malformed request syntax, invalid request
        message framing, or deceptive request routing).
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: Invalid request.
                default: Invalid request.
           
  
    401Unauthorized:
      description: >-
        No authorization. A valid API key was not provided with the request, so the API could not associate a user with the request.
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: No authorization
                default: No authorization
           
                

    403Forbidden:
      description: >-
        The 403 (Forbidden) status code indicates that the server understood
        the request but refuses to authorize it.  A server that wishes to
        make public why the request has been forbidden can describe that
        reason in the response payload (if any).

        If authentication credentials were provided in the request, the
        server considers them insufficient to grant access.  The client
        SHOULD NOT automatically repeat the request with the same
        credentials.  The client MAY repeat the request with new or different
        credentials.  However, a request might be forbidden for reasons
        unrelated to the credentials.
      content:
        application/json:
          schema:
            allOf:
              - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: You are not authorized to access this resource.
                default: You are not authorized to access this resource.
                
    
  
    404NotFound:
      description: >-
        The 404 (Not Found) status code indicates that the origin server did
        not find a current representation for the target resource or is not
        willing to disclose that one exists.  A 404 status code does not
        indicate whether this lack of representation is temporary or
        permanent; the 410 (Gone) status code is preferred over 404 if the
        origin server knows, presumably through some configurable means, that
        the condition is likely to be permanent.
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: The resource you were looking for could not be found.
                default: The resource you were looking for could not be found.
                
    405MethodNotAllowed:
      description: >-
        The 405 (Method Not Allowed) status code indicates that the method
        received in the request-line is known by the origin server but not
        supported by the target resource.  The origin server MUST generate an
        Allow header field in a 405 response containing a list of the target
        resource's currently supported methods.
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: Method Not Supported.
                default: Method Not Supported.
                
    409Conflict:
      description: >-
        The 409 (Conflict) status code indicates that the request could not
        be completed due to a conflict with the current state of the target
        resource.  This code is used in situations where the user might be
        able to resolve the conflict and resubmit the request.  The server
        SHOULD generate a payload that includes enough information for a user
        to recognize the source of the conflict.
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: Document update conflict
                default: Document update conflict  
    
    410Gone:
      description: >- 
        The 410 (Gone) status code indicates that access to the target
        resource is no longer available at the origin server and that this
        condition is likely to be permanent.  If the origin server does not
        know, or has no facility to determine, whether or not the condition
        is permanent, the status code 404 (Not Found) ought to be used
        instead.
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: Archived
                default: Archived
                
    422ValidationErrors:
      description: Validation errors. This is when the correct format of a request contains data that fails validation.
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: The resource could not validate your request
                default: The resource could not validate your request
                
    429TooManyRequests:
      description: Too Many Requests. You have breached the request limits for a given resource or for a given IP address range.
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: The resource has recieved to many requests
                default: The resource has recieved to many requests
                
    500InternalServerError:
      description: >- 
        The 500 (Internal Server Error) status code indicates that the server
        encountered an unexpected condition that prevented it from fulfilling
        the request.
      content:
        application/vnd.api+json:
          schema:
            type: object
            properties:
              description:
                type: string
                example: An unknown error has occurred.
                default: An unknown error has occurred.
                
    501NotImplemented:
      description: >-
        The 501 (Not Implemented) status code indicates that the server does
        not support the functionality required to fulfill the request.  This
        is the appropriate response when the server does not recognize the
        request method and is not capable of supporting it for any resource.

        A 501 response is cacheable by default; i.e., unless otherwise
        indicated by the method definition or explicit cache controls (see
        Section 4.2.2 of [RFC7234]).
      content:
        application/vnd.api+json:
          schema:
            type: object
            properties:
              description:
                type: string
                example: Not Implemented.
                default: Not Implemented.
                
    502BadGateway:
      description: >-
        The 502 (Bad Gateway) status code indicates that the server, while
        acting as a gateway or proxy, received an invalid response from an
        inbound server it accessed while attempting to fulfill the request.
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: Gateway Error
                default: Gateway Error

                
    503ServiceUnavailable:
      description: >-
        The 503 (Service Unavailable) status code indicates that the server
        is currently unable to handle the request due to a temporary overload
        or scheduled maintenance, which will likely be alleviated after some
        delay.  The server MAY send a Retry-After header field
        (Section 7.1.3) to suggest an appropriate amount of time for the
        client to wait before retrying the request.
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: Service Unavailable
                default: Service Unavailable
                
    504GatewayTimeout:
      description: >- 
        The 504 (Gateway Timeout) status code indicates that the server,
        while acting as a gateway or proxy, did not receive a timely response
        from an upstream server it needed to access in order to complete the
        request.
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: Gateway Timeout
                default: Gateway Timeout
                
    505HTTPVersionNotSupported:
      description: >-
        The 505 (HTTP Version Not Supported) status code indicates that the server does not support, or refuses to support, the major version of HTTP that was used in the request message.  The server is indicating that it is unable or unwilling to complete the request using the same major version as the client, as described in Section 2.6 of [RFC7230], other than with this error message.  The server SHOULD generate a representation for the 505 response that describes why that version is not supported and what other protocols are supported by that server.
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: HTTP Version Not Supported
                default: HTTP Version Not Supported