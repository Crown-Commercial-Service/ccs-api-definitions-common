openapi: 3.0.0

info:
  title: CCS Standard Responses
  description: Defines the standard HTTP responses expected within CCS.
  version: 0.0.2
servers:
  - url: http://api.example.com/v1
    description: Optional server description, e.g. Main (production) server
  - url: http://staging-api.example.com
    description: Optional server description, e.g. Internal staging server for testing
    
paths:
  /ocds/Release:
    get:
      summary: "Returns the requested release with supplied OCID"
      operationId: OCDS.Release   
      responses:
        '200':
          $ref: '#/components/responses/200Success'
        '201':
          $ref: '#/components/responses/201Success'
        '202':
          $ref: '#/components/responses/202Accepted'
        '400':
          $ref: '#/components/responses/401InvalidRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '409':
          $ref: '#/components/responses/409Conflict'
        '410':
          $ref: '#/components/responses/410Gone'
        '422':
          $ref: '#/components/responses/422ValidationErrors'
        '429':
          $ref: '#/components/responses/429TooManyRequests'
        '500':
          $ref: '#/components/responses/500InternalServerError'
        '501':
          $ref: '#/components/responses/501NotImplemented'
        '502':
          $ref: '#/components/responses/500InternalServerError'
        '503':
          $ref: '#/components/responses/502BadGateway'
        '504':
          $ref: '#/components/responses/504GatewayTimeout'
        '505':
          $ref: '#/components/responses/505HTTPVersionSupported'
          
        
      

components:
  responses:
    200Success:
      description: Success. If data was requested, it will be available in the data field at the top level of the response body.
      content:
        application/vnd.api+json:
          schema:
            type: string
            example: OK

                
    201Success:
      description: Success (for object creation). Its information is available in the data field at the top level of the response body. The API URL where the object can be retrieved is also returned in the Location header of the response.
      content:
        application/vnd.api+json:
          schema:
            $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericID'
          example: 1234
            
    202Accepted:
      description: Success (for object creation). Its information is available in the data field at the top level of the response body. The API URL where the object can be retrieved is also returned in the Location header of the response.
      content:
        application/vnd.api+json:
          schema:
            $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/GenericID'
          example: 1234
           
            
    400InvalidRequest:
      description: Invalid request. This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: The resource you were looking for requires L2 authentication.
                default: Invalid Request
           
  
    401Unauthorized:
      description: No authorization. A valid API key was not provided with the request, so the API could not associate a user with the request.
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: The resource you were looking for requires L2 authentication.
                default: No authorization. A valid API key was not provided with the request, so the API could not associate a user with the request.
           
                

    403Forbidden:
      description: The API key and request syntax was valid but the server is refusing to complete the request. This can happen if you are trying to read or write to objects or properties that you do not have access to.
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: You are not authorized to access this page.
                default: You are not authorized to access this page.
                
    
  
    404NotFound:
      description: Not found. Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: The resource you were looking for could not be found.
                default: The resource you were looking for could not be found.
                
    405MethodNotAllowed:
      description: A request method is not supported for the requested resource; for example, a GET request on a form that requires data to be presented via POST, or a PUT request on a read-only resource.
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: Method Not Supported.
                default: Method Not Supported.
                
    409Conflict:
      description: Document update conflict. The request could not be completed due to a conflict with the current state of the target resource. Please repeat your request.
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: The resource you were looking for could not be found.
                default: The resource you were looking for could not be found.  
    
    410Gone:
      description: Archived. The resource requested is not and will not be available.
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: The resource you were looking has been archived
                default: The resource you were looking has been archived
                
    422ValidationErrors:
      description: Validation errors
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: The resource could not validate your request
                default: The resource could not validate your request
                
    429TooManyRequests:
      description: Too Many Requests
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: The resource has recieved to many requests
                default: The resource has recieved to many requests
                
    500InternalServerError:
      description: An unknown server error has occurred.
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: An unknown error has occurred.
                default: An unknown error has occurred.
                
    501NotImplemented:
      description: Not Implemented. The server either does not recognize the request method, or it lacks the ability to fulfill the request. Re-check the request consistency.
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: Not Implemented.
                default: Not Implemented.
                
    502BadGateway:
      description: Bad Gateway. The server received an invalid response or backend is not ready to handle requests. Repeat request for repeatable operations or check object data with interval 1-5 min.
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: Gateway Error
                default: Gateway Error

                
    503ServiceUnavailable:
      description: Bad Gateway. The server received an invalid response or backend is not ready to handle requests. Repeat request for repeatable operations or check object data with interval 1-5 min.
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: Service Unavailable
                default: Service Unavailable
                
    504GatewayTimeout:
      description: Bad Gateway. The server received an invalid response or backend is not ready to handle requests. Repeat request for repeatable operations or check object data with interval 1-5 min.
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: Service Unavailable
                default: Service Unavailable
                
    505HTTPVersionSupported:
      description: Bad Gateway. The server received an invalid response or backend is not ready to handle requests. Repeat request for repeatable operations or check object data with interval 1-5 min.
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OpenAPI_Standards/CCS_Standard_API_Schema.yaml#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: Service Unavailable
                default: Service Unavailable